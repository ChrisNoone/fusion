import random
import time

from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver import ActionChains

from common.box import BasePage, YamlHelper


class MinuteMarkSix(BasePage):
    # 分分六合彩
    config_dict_marksix = YamlHelper().get_config_dict('/fusion/yaml/lottery_marksix.yaml')['MarkSix']

    def menu(self):
        self.base_driver.click(self.config_dict_marksix['MENU'])

    def twosides(self, row):
        # 两面-------------
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '两面')
        '''
        # for i in range(5):
        #     self.base_driver.types(self.config_dict_marksix['TWOSIDESN0'], '5555', i)
        #     self.base_driver.types(self.config_dict_marksix['TWOSIDESN1'], '6666', i)
        #     self.base_driver.types(self.config_dict_marksix['TWOSIDESN2'], '7777', i)
        #     self.base_driver.types(self.config_dict_marksix['TWOSIDESN3'], '8888', i)
        # 通过ID定位到进度条
        # bs = self.base_driver.click(self.config_dict_marksix['SSS01'])
        # 通过title属性获取当前的值
        s0 = self.base_driver.get_attribute(self.config_dict_marksix['SSS01'], 'aria-valuenow')
        # 通过ID定位到滑动块
        s1 = self.base_driver.click(self.config_dict_marksix['SSS02'])

        ActionChains(self.base_driver).click_and_hold(s1).move_by_offset(0, 7).release().perform()
        self.base_driver.forced_wait(3)
        '''

    def twosidesall(self, row):
        # 两面
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '两面')
        print('进入玩法两面')
        self.base_driver.forced_wait(1)
        try:
            for i in range(5):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['TWOSIDESN0'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['TWOSIDESN1'], s1[s3], i)
                self.base_driver.types(self.config_dict_marksix['TWOSIDESN2'], s1[s4], i)
                self.base_driver.types(self.config_dict_marksix['TWOSIDESN3'], s1[s5], i)
                print('两面下注的金额是' + str(s1[s2]) + str(s1[s3]) + str(s1[s4]) + str(s1[s5]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])

        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-两面.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('两面下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 两面
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '两面')
            self.base_driver.forced_wait(1)

    def sevenyards_qm(self, row):
        # 七码五行
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '七码五行')
        self.base_driver.forced_wait(1)
        # 七码五行---七码
        self.base_driver.clicks(self.config_dict_marksix['QMWXN'], '0')
        print('进入七码五行---七码')
        self.base_driver.forced_wait(1)
        try:
            for i in range(8):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['DSNN'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['DXNN'], s1[s3], i)
                print('七码五行: ' + str(s1[s2]) + str(s1[s3]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-七码五行---七码.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('七码五行---七码下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 七码五行
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '七码五行')
            self.base_driver.forced_wait(1)
            # 七码五行---七码
            self.base_driver.clicks(self.config_dict_marksix['QMWXN'], '0')
                
    def sevenyards_wx(self, row):
        # 七码五行
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '七码五行')
        self.base_driver.forced_wait(1)
        # 七码五行---五行
        self.base_driver.clicks(self.config_dict_marksix['QMWXN'], '1')
        self.base_driver.forced_wait(1)
        try:
            for i in range(5):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['WUXINGNN'], s1[s2], i)
                print('七码五行: ' + str(s1[s2]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-七码五行---五行.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('七码五行---五行下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 七码五行
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '七码五行')
            self.base_driver.forced_wait(1)
            # 七码五行---五行
            self.base_driver.clicks(self.config_dict_marksix['QMWXN'], '1')
            self.base_driver.forced_wait(1)

    def tailnum_htnum(self, row):
        # 尾数
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '尾数')
        self.base_driver.forced_wait(1)
        # 尾数----头尾数字
        self.base_driver.clicks(self.config_dict_marksix['HTZTN'], '0')
        self.base_driver.forced_wait(1)
        try:
            for i in range(5):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['HTN01'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['HTN02'], s1[s3], i)
                self.base_driver.types(self.config_dict_marksix['HTN03'], s1[s4], i)
                print('尾数----头尾数字: ' + str(s1[s2]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-尾数----头尾数字.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('尾数----头尾数字下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 尾数
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '尾数')
            self.base_driver.forced_wait(1)
            # 尾数----头尾数字
            self.base_driver.clicks(self.config_dict_marksix['HTZTN'], '0')
            self.base_driver.forced_wait(1)

    def tailnum_potnum(self, row):
        # 尾数
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '尾数')
        self.base_driver.forced_wait(1)
        # 尾数----正特尾数
        self.base_driver.clicks(self.config_dict_marksix['HTZTN'], '1')
        self.base_driver.forced_wait(1)
        try:
            for i in range(5):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['POTPTN0'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['POTPTN1'], s1[s3], i)
                print('尾数----正特尾数: ' + str(s1[s2]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-尾数----正特尾数.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('尾数----正特尾数下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 尾数
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '尾数')
            self.base_driver.forced_wait(1)
            # 尾数----正特尾数
            self.base_driver.clicks(self.config_dict_marksix['HTZTN'], '1')
            self.base_driver.forced_wait(1)

    def sebo_3(self, row):
        # 色波
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
        self.base_driver.forced_wait(1)
        # 色波---三色波
        self.base_driver.clicks(self.config_dict_marksix['SEBON'], '0')
        self.base_driver.forced_wait(1)
        try:
            for i in range(3):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['HTN01'], s1[s2], i)
                print(' 色波---三色波: ' + str(s1[s2]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-色波---三色波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('色波---三色波下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 色波
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
            self.base_driver.forced_wait(1)
            # 色波---三色波
            self.base_driver.clicks(self.config_dict_marksix['SEBON'], '0')
            self.base_driver.forced_wait(1)

    def sebo_h(self, row):
        # 色波
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
        self.base_driver.forced_wait(1)
        # 色波---半波
        self.base_driver.clicks(self.config_dict_marksix['SEBON'], '1')
        self.base_driver.forced_wait(1)
        try:
            for i in range(12):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['SEBOHN'], s1[s2], i)
                print(' 色波---三色波: ' + str(s1[s2]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-色波---半波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('色波---半波波下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 色波
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
            self.base_driver.forced_wait(1)
            # 色波---半波
            self.base_driver.clicks(self.config_dict_marksix['SEBON'], '1')
            self.base_driver.forced_wait(1)

    def sebo_hh(self, row):
        # 色波
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
        self.base_driver.forced_wait(1)
        # 色波---半半波
        self.base_driver.clicks(self.config_dict_marksix['SEBON'], '2')
        self.base_driver.forced_wait(1)
        try:
            for i in range(12):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['SEBOHN'], s1[s2], i)
                print(' 色波---三色波: ' + str(s1[s2]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-色波---半波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('色波---半波波下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 色波
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
            self.base_driver.forced_wait(1)
            # 色波---半半波
            self.base_driver.clicks(self.config_dict_marksix['SEBON'], '2')
            self.base_driver.forced_wait(1)

    def sebo_7(self, row):
        # 色波
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
        self.base_driver.forced_wait(1)
        # 色波---七色波
        self.base_driver.clicks(self.config_dict_marksix['SEBON'], '3')
        self.base_driver.forced_wait(1)
        try:
            for i in range(4):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['SEBO37N'], s1[s2], i)
                print(' 色波---七色波: ' + str(s1[s2]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-色波---七色波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('色波---七色波下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 色波
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '色波')
            self.base_driver.forced_wait(1)
            # 色波---七色波
            self.base_driver.clicks(self.config_dict_marksix['SEBON'], '3')
            self.base_driver.forced_wait(1)

    def hexiao_1(self, row):
        # 合肖
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '合肖')
        self.base_driver.forced_wait(1)
        print('进入合肖页面')
        # 合肖---野兽
        for i in range(20):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 2))
                s2 = random.choice(range(0, 8))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 6))
                # 野兽-家禽-单-双-前肖-后肖-天肖-地肖
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['HEXIAONN'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('合肖生肖选择： ' + str(s2))
                # 生肖2个
                if s0 == 1:
                    print('合肖生肖选择： ' + str(a0) + str(a1))
                    if a0 == a1:
                        self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 生肖3个
                if s0 == 3:
                    print('合肖生肖选择： ' + str(a0) + str(a1) + str(a2))
                    if s1 == 0:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    if s1 == 1:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    if s1 == 2:
                        if a0 == a1 or a0 == a2 or a1 == a2:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-合肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('合肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 合肖
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '合肖')
                self.base_driver.forced_wait(1)
                break

    def hexiao_1_error(self, row):
        # 合肖
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '合肖')
        self.base_driver.forced_wait(1)
        print('进入合肖页面')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['HEXIAON0'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['HEXIAON1'], a1)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-合肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('合肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 合肖
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '合肖')
                self.base_driver.forced_wait(1)
                break

    def shengxiao_zhx(self, row):
        # 生肖
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
        self.base_driver.forced_wait(1)
        # 生肖---正肖
        self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '0')
        self.base_driver.forced_wait(1)
        try:
            for i in range(6):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['SXZXSXN0'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['SXZXSXN1'], s1[s3], i)
            print('生肖---正肖' + str(s1[s2]) + str(s1[s3]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-生肖---正肖.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('生肖---正肖异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 生肖
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
            self.base_driver.forced_wait(1)
            # 生肖---正肖
            self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '0')
            self.base_driver.forced_wait(1)
                
    def shengxiao_tex(self, row):
        # 生肖
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
        self.base_driver.forced_wait(1)
        # 生肖---平特一肖
        self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '1')
        self.base_driver.forced_wait(1)
        try:
            for i in range(6):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['SXZXSXN0'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['SXZXSXN1'], s1[s3], i)
                print('生肖---平特一肖' + str(s1[s2]) + str(s1[s3]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-生肖---平特一肖.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('生肖---特肖异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 生肖
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
            self.base_driver.forced_wait(1)
            # 生肖---特肖
            self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '1')
            self.base_driver.forced_wait(1)

    def shengxiao_yix(self, row):
        # 生肖
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
        self.base_driver.forced_wait(1)
        # 生肖---平特一肖
        self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '2')
        self.base_driver.forced_wait(1)
        try:
            for i in range(6):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['SXZXSXN0'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['SXZXSXN1'], s1[s3], i)
                print('生肖---正肖' + str(s1[s2]) + str(s1[s3]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-生肖---平特一肖.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('生肖---平特一异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 生肖
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
            self.base_driver.forced_wait(1)
            # 生肖---平特一肖
            self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '2')
            self.base_driver.forced_wait(1)

    def shengxiao_zongx(self, row):
        # 生肖
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
        self.base_driver.forced_wait(1)
        # 生肖---总肖
        self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '3')
        self.base_driver.forced_wait(1)
        try:
            for i in range(3):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['SXZXZXN0'], s1[s2], i)
                self.base_driver.types(self.config_dict_marksix['SXZXZXN1'], s1[s3], i)
                print('生肖---正肖' + str(s1[s2]) + str(s1[s3]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-生肖---总肖.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('生肖---总肖异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 生肖
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '生肖')
            self.base_driver.forced_wait(1)
            # 生肖---总肖
            self.base_driver.clicks(self.config_dict_marksix['SXXXN'], '3')
            self.base_driver.forced_wait(1)

    def nochoice_5(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---五不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '0')
        self.base_driver.forced_wait(1)
        print('进入五不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机五个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五不中随机五个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五不中随机五个：  ' + ' ' + str(i))
                # 随机六个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五不中随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五不中随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五不中随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五不中随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五不中随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五不中随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass

                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('自选不中---五不中随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('自选不中---五不中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 5:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('自选不中---五不中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                else:
                    pass
            except Exception as e:
                print(e)
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---五不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)

                # self.logger.infos(' 自选不中---五不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---五不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '0')
                self.base_driver.forced_wait(1)
                break

    def nochoice_5_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---五不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '0')
        self.base_driver.forced_wait(1)
        print('进入五不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('五不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---五不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---五不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---五不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '0')
                self.base_driver.forced_wait(1)
                break

    def nochoice_6(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---六不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '1')
        self.base_driver.forced_wait(1)
        print(' 自选不中---六不中')
        print('进入六不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机六个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六不中随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六不中随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六不中随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六不中随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六不中随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六不中随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六不中随机九个：  ' + ' ' + str(i))
    
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六不中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 4:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六不中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六不中随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---六不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---六不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---六不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '1')
                self.base_driver.forced_wait(1)
                break

    def nochoice_6_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---六不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '1')
        self.base_driver.forced_wait(1)
        print(' 自选不中---六不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('六不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('六不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('六不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('六不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---六不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---六不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---六不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '1')
                self.base_driver.forced_wait(1)
                break

    def nochoice_7(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---七不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '2')
        self.base_driver.forced_wait(1)
        print(' 自选不中---七不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机七个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('七不中随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七不中随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('七不中随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七不中随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('七不中随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七不中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 3:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七不中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七不中随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---七不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---七不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---七不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '2')
                self.base_driver.forced_wait(1)
                break

    def nochoice_7_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---七不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '2')
        self.base_driver.forced_wait(1)
        print(' 自选不中---七不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 6))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('七不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---七不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---七不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---七不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '2')
                self.base_driver.forced_wait(1)
                break

    def nochoice_8(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---八不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '3')
        self.base_driver.forced_wait(1)
        print(' 自选不中---八不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机八个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('八不中随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八不中随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('八不中随机九个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八不中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 2:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八不中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八不中随机十个：  ' + ' ' + str(i))
                # 随机十一个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a5 == a6 or a6 == a7 \
                            or a7 == a8 or b0 == b1:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八不中随机十一个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八不中随机十一个：  ' + ' ' + str(i))
                # else:
                #     pass
            except Exception as e:
                print(e)
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---八不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---八不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---八不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '3')
                self.base_driver.forced_wait(1)
                break

    def nochoice_8_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---八不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '3')
        self.base_driver.forced_wait(1)
        print(' 自选不中---八不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('八不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---八不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---八不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---八不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '3')
                self.base_driver.forced_wait(1)
                break

    def nochoice_9(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---九不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '4')
        self.base_driver.forced_wait(1)
        print('进入自选不中---九不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                a9 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                # 随机九个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('九不中随机九个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九不中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 1:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九不中随机十个：  ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九不中随机十个：  ' + ' ' + str(i))
                # 随机十一个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a5 == a6 or a6 == a7 \
                            or a7 == a8 or b0 == b1:              
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九不中随机十一个：  ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九不中随机十一个：  ' + str(i))
                # 随机十二个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a3 == a5 or a4 == a5 or a6 == a7 \
                            or a8 == a9 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九不中随机十二个：  ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a9)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九不中随机十二个：  ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---九不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---九不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---九不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '4')
                self.base_driver.forced_wait(1)
                break

    def nochoice_9_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---九不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '4')
        self.base_driver.forced_wait(1)
        print(' 自选不中---九不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 8))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('九不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                # 随机八个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---九不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---九不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---九不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '4')
                self.base_driver.forced_wait(1)
                break

    def nochoice_10(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---十不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '5')
        self.base_driver.forced_wait(1)
        print(' 自选不中---十不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                a9 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                # 随机十个
                if s0 == 0:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十个：  ' + ' ' + str(i))
                # 随机十一个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a5 == a6 or a6 == a7 \
                            or a7 == a8 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十一个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十一个：  ' + ' ' + str(i))
                # 随机十二个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a3 == a5 or a4 == a5 or a6 == a7 \
                            or a8 == a9 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十一个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a9)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十一个：  ' + ' ' + str(i))
                # 随机十三个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a3 == a5 or a4 == a5 or a6 == a7 \
                            or a8 == a9 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十三个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a9)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十不中随机十二个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---十不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---十不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---十不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '5')
                self.base_driver.forced_wait(1)
                break

    def nochoice_10_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---十不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '5')
        self.base_driver.forced_wait(1)
        print(' 自选不中---十不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 9))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('十不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                # 随机八个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                # 随机九个
                if s0 == 8:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass

                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            print('十不中随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十不中随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---十不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---十不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---十不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '5')
                self.base_driver.forced_wait(1)
                break
                
    def nochoice_11(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---十一不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '6')
        self.base_driver.forced_wait(1)
        print('进入十一不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                a9 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                # 随机十一个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a5 == a6 or a7 == a8 or b0 == b1:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十一不中随机十一个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十一不中随机十一个：  ' + ' ' + str(i))
                # 随机十二个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a3 == a5 or a4 == a5 or a6 == a7 \
                            or a8 == a9 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十一不中随机十二个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a9)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十一不中随机十二个：  ' + ' ' + str(i))
                # 随机十三个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a3 == a5 or a4 == a5 or a6 == a7 \
                            or a8 == a9 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十一不中随机十三个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a9)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十一不中随机十三个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---十一不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---十一不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---十一不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '6')
                self.base_driver.forced_wait(1)
                break

    def nochoice_11_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---十一不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '6')
        self.base_driver.forced_wait(1)
        print(' 自选不中---十一不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 10))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('十一不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十一不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十一不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十一不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十一不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十一不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                # 随机八个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十一不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                # 随机九个
                if s0 == 8:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass

                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            print('十一不中随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                # 随机十个
                if s0 == 9:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十一不中随机十个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        print('十一不中随机十个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---十一不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---十一不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---十一不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '6')
                self.base_driver.forced_wait(1)
                break

    def nochoice_12(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---十二不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '7')
        self.base_driver.forced_wait(1)
        print('进入十二不中')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                a9 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                # 随机十二个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a5 == a6 or a7 == a8 \
                            or b0 == b1 or b0 == b2 or b1 == b2:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十二不中随机十二个：  ' + ' ' + str(i))
                    else:
                        pass
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('随机十二2个：  ' + ' ' + str(i))
                # 随机十三个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a3 == a5 or a4 == a5 or a6 == a7 \
                            or a8 == a9 or b0 == b1 or b0 == b2 or b1 == b2:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十二不中随机十三个：  ' + ' ' + str(i))
                    else:
                        pass
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a9)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十二不中随机十三个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                # self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---十二不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---十二不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---十二不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '7')
                self.base_driver.forced_wait(1)
                break

    def nochoice_12_error(self, row):
        # 自选不中
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
        self.base_driver.forced_wait(1)
        # 自选不中---十二不中
        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '7')
        self.base_driver.forced_wait(1)
        print(' 自选不中---十二不中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 11))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('十二不中随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十二不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十二不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十二不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十二不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十二不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                # 随机八个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十二不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                # 随机九个
                if s0 == 8:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass

                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            print('十二不中随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                # 随机十个
                if s0 == 9:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机十个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        print('十二不中随机十个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                # 随机十一个
                if s0 == 10:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十二不中随机十一个： ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        print('十二不中随机十一个： ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s- 自选不中---十二不中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos(' 自选不中---十二不中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 自选不中
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '自选不中')
                self.base_driver.forced_wait(1)
                # 自选不中---十二不中
                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN'], '7')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lx2(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---二连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '0')
        self.base_driver.forced_wait(1)
        print('二连肖')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 6))
                a3 = random.choice(range(0, 6))
                a4 = random.choice(range(0, 6))
                a5 = random.choice(range(0, 6))
                #  勾选两个生肖
                if s0 == 0:
                    if a0 == a1:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选三个生肖
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        if a1 == a2:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选四个生肖
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选五个生肖
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or \
                            a2 == a3 or a2 == a4 or a3 == a4:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选六个生肖
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print(' 二连肖勾选的生肖是：' + str(a0) + str(a1))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---二连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---二连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---二连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '0')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lx2_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---二连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '0')
        self.base_driver.forced_wait(1)
        print('二连肖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 6))
                s2 = random.choice(range(0, 6))
                # 勾选一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                # 勾选一个
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---二连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---二连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---二连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '0')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lx3(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---三连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '1')
        self.base_driver.forced_wait(1)
        for i in range(50):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 6))
                a3 = random.choice(range(0, 6))
                a4 = random.choice(range(0, 6))
                a5 = random.choice(range(0, 6))
                #  勾选三个生肖
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        if a1 == a2:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            self.base_driver.forced_wait(1)
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            self.base_driver.forced_wait(1)
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选四个生肖
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选五个生肖
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or \
                            a2 == a3 or a2 == a4 or a3 == a4:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选六个生肖
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连肖勾选的生肖是：' + str(a0) + str(a1))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---三连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---三连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---三连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '1')
                self.base_driver.forced_wait(1)
                break
                
    def lxlw_lx3_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---三连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '1')
        self.base_driver.forced_wait(1)
        print('三连肖')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 6))
                s2 = random.choice(range(0, 6))
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---三连肖: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---三连肖: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                if s0 == 2:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---三连肖: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                if s0 == 3:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---三连肖: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---三连肖: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---三连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---三连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---三连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lx4(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---三连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '2')
        print('四连肖')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 6))
                a3 = random.choice(range(0, 6))
                a4 = random.choice(range(0, 6))
                a5 = random.choice(range(0, 6))
                #  勾选四个生肖
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选五个生肖
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or \
                            a2 == a3 or a2 == a4 or a3 == a4:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选六个生肖
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连肖勾选的生肖是：' + str(a0) + str(a1))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---四连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---四连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---四连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '2')
                self.base_driver.forced_wait(1)
                break
                
    def lxlw_lx4_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---三连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '2')
        self.base_driver.forced_wait(1)
        print('四连肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 8))
                s1 = random.choice(range(0, 6))
                s2 = random.choice(range(0, 6))
                s3 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 2))
                # 随机一个生肖
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                # 随机两个生肖
                if s0 == 2:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                if s0 == 3:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                # 随机三个生肖
                if s0 == 5:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                if s0 == 6:
                    if s2 == s3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                if s0 == 7:
                    if a0 == 0:
                        if s1 == s2 or s1 == s3 or s2 == s3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                    if a0 == 1:
                        if s1 == s2 or s1 == s3 or s2 == s3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---四连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---四连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---四连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lx5(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---五连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '3')
        self.base_driver.forced_wait(1)
        print('五连肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 6))
                a3 = random.choice(range(0, 6))
                a4 = random.choice(range(0, 6))
                a5 = random.choice(range(0, 6))
                #  勾选五个生肖
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or \
                            a2 == a3 or a2 == a4 or a3 == a4:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五连肖勾选的生肖是：' + str(a0) + str(a1))
                #  勾选六个生肖
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五连肖勾选的生肖是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五连肖勾选的生肖是：' + str(a0) + str(a1))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---五连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---五连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---五连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '2')
                self.base_driver.forced_wait(1)
                break
                
    def lxlw_lx5_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---五连肖
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '3')
        self.base_driver.forced_wait(1)
        print('五连肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 12))
                s1 = random.choice(range(0, 6))
                s2 = random.choice(range(0, 6))
                s3 = random.choice(range(0, 6))
                s4 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 2))
                # 随机一个生肖
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                # 随机两个生肖
                if s0 == 2:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                if s0 == 3:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                # 随机三个生肖
                if s0 == 6:
                    if s1 == s2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                if s0 == 7:
                    if s2 == s3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                if s0 == 8:
                    if a0 == 0:
                        if s1 == s2 or s1 == s3 or s2 == s3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                    if a0 == 1:
                        if s1 == s2 or s1 == s3 or s2 == s3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                # 随机四个生肖
                if s0 == 9:
                    if a0 == 0:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s4)
                    if a0 == 1:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                if s0 == 10:
                    if s1 == s2 and s3 == s4:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                if s0 == 11:
                    if a0 == 0:
                        if s1 == s2 or s1 == s3 or s2 == s3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                    if a0 == 1:
                        if s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五连肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN0'], s1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s3)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLXN1'], s4)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---五连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---五连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---五连肖
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '3')
                self.base_driver.forced_wait(1)
                break
                
    def lxlw_lw2(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---二连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '4')
        print('进入二连尾')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                a4 = random.choice(range(0, 5))
                a5 = random.choice(range(0, 5))
                #  勾选两个尾数
                if s0 == 0:
                    if a0 == a1:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        print('二连尾勾选的尾数是：' + str(a0) + str(a1))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二连尾勾选的尾数是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二连尾勾选的尾数是：' + str(a0) + str(a1))
                #  勾选三个尾数
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        if a1 == a2:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二连尾勾选的尾数是：' + str(a0) + str(a1))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二连尾勾选的尾数是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二连尾勾选的尾数是：' + str(a0) + str(a1) + str(a2))
                #  勾选四个尾数
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二连尾勾选的尾数是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二连尾勾选的尾数是：' + str(a0) + str(a1))
                #  勾选五个尾数是
                if s0 == 3:
                    if s1 == 0:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], j)
                            print('二连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    if s1 == 1:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], j)
                            print('二连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---二连尾.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---二连尾异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---二连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lw2_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---二连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '4')
        print('进入二连尾')
        # 连肖连尾---二连尾---尾0-尾1
        for i in range(10):
            try:
                s0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---二连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---二连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---二连肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---二连肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---二连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lw3(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---三连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '5')
        print('进入三连尾')
        self.base_driver.forced_wait(1)
        for i in range(50):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                a4 = random.choice(range(0, 5))
                a5 = random.choice(range(0, 5))
                #  勾选三个尾数
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        if a1 == a2:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连尾勾选的尾数是：' + str(a0) + str(a1))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连尾勾选的尾数是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连尾勾选的尾数是：' + str(a0) + str(a1) + str(a2))
                #  勾选四个尾数
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连尾勾选的尾数是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三连尾勾选的尾数是：' + str(a0) + str(a1))
                #  勾选五个尾数是
                if s0 == 2:
                    if s1 == 0:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], j)
                            print('三连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    if s1 == 1:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], j)
                            print('三连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---三连尾.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---三连尾异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---三连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '5')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lw3_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---三连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '5')
        print('进入三连尾')
        self.base_driver.forced_wait(1)
        for i in range(20):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                # 随机一个尾数
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---三连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---三连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                # 随机两个尾数
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---三连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                if s0 == 3:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---三连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                if s0 == 4:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---三连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---三连尾.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---三连尾异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---三连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '5')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lw4(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---四连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '6')
        self.base_driver.forced_wait(1)
        print('进入四连尾')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                a4 = random.choice(range(0, 5))
                a5 = random.choice(range(0, 5))
                #  勾选四个尾数
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连尾勾选的尾数是：' + str(a0) + str(a1))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连尾勾选的尾数是：' + str(a0) + str(a1))
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四连尾勾选的尾数是：' + str(a0) + str(a1))
                #  勾选五个尾数是
                if s0 == 2:
                    if s1 == 0:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], j)
                            print('四连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    if s1 == 1:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], j)
                            print('四连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---四连尾.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---四连尾异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---四连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lw4_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---四连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '6')
        self.base_driver.forced_wait(1)
        print('进入四连尾')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 9))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                a2 = random.choice(range(0, 5))
                # 随机一个尾数
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                # 随机两个尾数
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                if s0 == 3:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                if s0 == 4:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                # 随机三个尾数
                if s0 == 5:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                if s0 == 6:
                    if a1 == a2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                if s0 == 8:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---四连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---四连尾.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---四连尾异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---四连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '6')
                self.base_driver.forced_wait(1)
                break

        print('覆盖完毕------')

    def lxlw_lw5(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---五连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '7')
        self.base_driver.forced_wait(1)
        print('进入五连尾')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 1))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                a4 = random.choice(range(0, 5))
                a5 = random.choice(range(0, 5))
                #  勾选五个尾数是
                if s0 == 0:
                    if s1 == 0:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], j)
                            print('四连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    if s1 == 1:
                        for j in range(5):
                            self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], j)
                            print('四连尾勾选的尾数是：' + str(j))
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---五连尾.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---五连尾异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---五连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '7')
                self.base_driver.forced_wait(1)
                break

    def lxlw_lw5_error(self, row):
        # 连肖连尾
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
        self.base_driver.forced_wait(1)
        # 连肖连尾---五连尾
        self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '7')
        self.base_driver.forced_wait(1)
        print('进入五连尾')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 14))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                a4 = random.choice(range(0, 5))
                # 随机一个尾数
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                # 随机两个尾数
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                if s0 == 3:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                if s0 == 4:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                # 随机三个尾数
                if s0 == 5:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                if s0 == 6:
                    if a1 == a2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                if s0 == 8:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                # 随机四个尾数
                # 一边两个
                if s0 == 9:
                    if a0 == a1 or a2 == a3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                # 左3右1
                if s0 == 10:
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                # 左1右3
                if s0 == 11:
                    if a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                # 左4
                if s0 == 12:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN0_4'], a3)
                # 右4
                if s0 == 13:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连肖连尾---五连尾: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LXLWLWWN5_9'], a3)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连肖连尾---五连尾.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连肖连尾---五连尾异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连肖连尾
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连肖连尾')
                self.base_driver.forced_wait(1)
                # 连肖连尾---五连尾
                self.base_driver.clicks(self.config_dict_marksix['LXLWN'], '7')
                self.base_driver.forced_wait(1)
                break

        print('覆盖完毕------')

    # -------------------------------------------------------------------
    # -------------------------------------------------------------------
    # -------------------------------------------------------------------
    def lm_fullin4(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        print('进入四全中')
        # 随机抽取4个号码
        for i in range(20):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机四个号码
                if s0 == 0:
                    print('四全中随机四个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                            or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机五个号码
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机五个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机六个号码
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5 \
                            or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b2 == b3 or b2 == b4 or b2 == b5 or b3 == b4 or b3 == b5 or b4 == b5:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机六个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机七个号码
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:

                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机七个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机八个号码
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机八个号码')
                    else:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机九个号码
                if s0 == 5:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:

                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('四全中随机九个号码')
                # 随机十个号码
                if s0 == 6:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('四全中随机十个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                break
        print('覆盖完毕------')

    def lm_fullin4_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        print('进入四全中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                c0 = random.choice(range(0, 10))
                c1 = random.choice(range(0, 10))
                c2 = random.choice(range(0, 10))
                c3 = random.choice(range(0, 10))
                c4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('四全中任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                # 任意两个
                if s0 == 1:
                    if s1 == s2:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                # 任意三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                        if s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], c0)
                        if s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], c1)
                        if s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], c2)
                        if s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], c3)
                        if s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], c4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                        if s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], c0)
                        if s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], c1)
                        if s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], c2)
                        if s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], c3)
                        if s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], c4)
                # 任意11个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a2 == a3 or b0 == b1 or b2 == b3 or a4 == b4:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                    print('四全中随机11个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                break

    def lm_full4_zfh(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中---正/副号
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---正/副号')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机四个
                if s0 == 0:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机四个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机四个：  ' + ' ' + str(i))
                # 随机五个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机五个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机五个：  ' + ' ' + str(i))
                # 随机六个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 6:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---正/副号.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---正/副号异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_full4_zfh_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        # 连码---特串---正/副号
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---正/副号')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('四全中任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 任意两个
                if s0 == 1:
                    if s1 == s2:
                        pass
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 任意三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 特殊选择四个号码--- 选择五个，去掉正号
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        # 去掉正
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('特殊选择四个号码--- 选择五个，去掉正号：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 任意11个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a2 == a3 or b0 == b1 or b2 == b3 or a4 == b4:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    print('四全中随机11个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---正/副号.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---正/副号异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_full4_xcws(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---肖串尾数')
        # 连码---四全中---肖串尾数
        for i in range(20):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                if ss == 0:
                    # 生肖---尾数各随机一个
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('四全中随机二个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---肖串尾数异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break
        print('覆盖完毕------')

    def lm_full4_xcws_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中--肖串尾数')
        # 连码---二全中----12
        for i in range(100):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                # 生肖随机一个
                if ss == 0:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---四全中---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                # 尾数随机一个
                if ss == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---四全中---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    print('尾数随机一个：  ' + ' ' + str(i))
            except Exception as e:
                    print(e)
                    now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                    ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---肖串尾数.png' % now_Time
                    self.base_driver.save_window_snapshot_by_io(ss)
                    # self.logger.infos('连码---四全中---肖串尾数异常')
                    self.base_driver.refresh()
                    self.base_driver.forced_wait(4)
                    # 连码
                    self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                    self.base_driver.forced_wait(1)
                    # 连码---四全中---肖串尾数
                    self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                    self.base_driver.forced_wait(1)
                    self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                    self.base_driver.forced_wait(1)
                    break
        print('覆盖完毕------')

    def lm_full4_jcp(self, row):
        # 连码
        self.base_driver.click(self.config_dict_marksix['LIANMA'])
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        # 连码---四全中---交叉碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        # 新增柱列
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 8))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 5))
                # 尾选四
                if s0 == 0:
                    # 尾数
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                        pass
                    else:
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a0)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a1)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a2)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN3'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a3)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中尾数')
                # 数字选4
                if s0 == 1:
                    if s2 == s3 or s2 == s4 or s2 == s5 or s3 == s4 or s3 == s5 or s4 == s5:
                        pass
                    else:
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])

                        if s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)

                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                        if s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN3'])

                        if s5 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s5 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s5 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s5 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s5 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])

                        print('四全中数字')
                # 生肖--色波
                if s0 == 2:
                    if s1 == 0:
                        # 四个生肖
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                            pass
                        else:
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a0)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a1)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a2)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN3'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中生肖--色波')
                    if s1 == 2:
                        # 三个生肖
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                            pass
                        else:
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a0)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a1)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a2)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN3'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中生肖--色波')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---交叉碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---交叉碰异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---交叉碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    '''
    def lm_full4_jcp_error(self, row):
        # 连码
        self.base_driver.click(self.config_dict_marksix['LIANMA'])
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.click(self.config_dict_marksix['FULLIN4'])
        self.base_driver.forced_wait(1)
        # 连码---四全中---交叉碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')

        # self.base_driver.forced_wait(3)

        # 新增柱列
        for i in range(2000000000):
            s0 = random.choice(range(0, 3))
            s1 = random.choice(range(0, 8))
            s2 = random.choice(range(0, 5))
            s3 = random.choice(range(0, 5))
            s4 = random.choice(range(0, 5))
            s5 = random.choice(range(0, 5))

            c0 = random.sample(range(0, 5), 4)
            a0 = random.choice(range(0, 10))

            a1 = random.choice(range(0, 10))
            a2 = random.choice(range(0, 10))
            a3 = random.choice(range(0, 10))
            a4 = random.choice(range(0, 10))
            a5 = random.choice(range(0, 9))

            b0 = random.choice(range(0, 10))
            b1 = random.choice(range(0, 5))
            # 数字选1
            if s0 == 0:
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                print('s111111:   ' + str(s2))
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.forced_wait(3)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])

                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                print('s22222:    ' + str(s2))
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)

            # 数学选2
            if s0 == 1:
                if s2 == s3:
                    pass
                else:
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                    if s2 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s2 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s2 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s2 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s2 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                    if s3 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s3 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s3 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s3 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s3 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---四全中---数学选2：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                    if s2 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s2 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s2 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s2 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s2 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                    if s3 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s3 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s3 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s3 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s3 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)

            if s0 == 2:
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                if s3 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s3 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s3 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s3 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s3 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                if s4 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s4 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s4 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s4 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s4 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                if s3 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s3 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s3 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s3 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s3 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                if s4 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s4 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s4 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s4 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s4 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                print('数字')


    '''

    def lm_full4_dt(self, row):
        # 连码
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---胆拖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if a0 == b0 or a1 == b1 or a2 == b2 or a3 == b3 or a4 == b4:
                    pass
                else:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s0 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s0 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s0 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    print('连码---四全中---胆拖')
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---胆拖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_full4_dt_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---胆拖')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                if s0 == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---胆拖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_full4_dtsb(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---胆拖色波')
        for i in range(5):
            try:
                s0 = random.choice(range(0, 1))
                s1 = random.choice(range(0, 5))
                c0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---胆拖色波异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
                self.base_driver.forced_wait(1)
                break

    def lm_full4_dtsb_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---胆拖色波')
        # 任意选择一个胆
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---四全中---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---胆拖色波异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
                self.base_driver.forced_wait(1)
                break
        # 任选一个色波
        try:
            c0 = random.choice(range(0, 3))
            self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
            print('连码---特串---胆拖生肖：  ' + ' ' + str(s))
            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---胆拖色波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('连码---四全中---胆拖色波异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 连码
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
            self.base_driver.forced_wait(1)
            # 连码---四全中---胆拖色波
            self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
            self.base_driver.forced_wait(1)
            self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
            self.base_driver.forced_wait(1)
           
    def lm_full4_dtsx(self, row):
        # 连码
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---胆拖生肖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，一个拖
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 任意选择一个胆，二个拖
                if s0 == 1:
                    if s1 == 0:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
    
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    else:
                        pass
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---胆拖生肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_full4_dtsx_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---四全中---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---胆拖生肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                # 任选一个拖
                if s0 == 1:
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
    
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                # 任选二个拖
                if s0 == 2:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    else:
                        pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---四全中---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---四全中---胆拖生肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---四全中---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '0')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

        print('覆盖完毕------')

    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------

    def lm_full3qz(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中')
        # 随机抽取3个号码
        for i in range(20):
            try:
                s0 = random.choice(range(0, 8))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机三个号码
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == s2 or s1 == s3 or s2 == s3:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机四个号码
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                            or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机五个号码
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机五个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机六个号码
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5 \
                            or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b2 == b3 or b2 == b4 or b2 == b5 or b3 == b4 or b3 == b5 or b4 == b5:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机六个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机七个号码
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:

                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机七个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机八个号码
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机八个号码')
                    else:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机九个号码
                if s0 == 6:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:

                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('四全中随机九个号码')
                # 随机十个号码
                if s0 == 7:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('四全中随机十个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中
                self.base_driver.clicks(self.config_dict_marksix['FULLIN4'], '1')
                self.base_driver.forced_wait(1)
                print('进入连码---三全中')
                break

    def lm_full3qz_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        print('进入三全中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                # 任意两个
                if s0 == 1:
                    if s1 == s2:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                # 任意11个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a2 == a3 or b0 == b1 or b2 == b3 or a4 == b4:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                    print('随机11个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中
                self.base_driver.clicks(self.config_dict_marksix['FULLIN4'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_full3qz_zfh(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中---正/副号
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---正/副号')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 8))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机三个
                if s0 == 0:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机三个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机四个：  ' + ' ' + str(i))
                # 随机四个
                if s0 == 1:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机四个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('随机四个：  ' + ' ' + str(i))
                # 随机五个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机五个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机五个：  ' + ' ' + str(i))
                # 随机六个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('四全中随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 7:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('四全中随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_full3qz_zfh_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        # 连码---三全中---正/副号
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---正/副号')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))              
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('四全中任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 任意两个
                if s0 == 1:
                    if s1 == s2:
                        pass
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 特殊选择三个号码--- 选择四个，去掉正号
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        # 去掉正
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('特殊选择四个号码--- 选择五个，去掉正号：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                # 任意11个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a2 == a3 or b0 == b1 or b2 == b3 or a4 == b4:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('四全中任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    print('四全中随机11个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                # 连码---三全中---正/副号
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                break

    def lm_full3qz_xcws(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        # 连码--- 三全中---肖串尾数
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---肖串尾数')
        # 连码---三全中----12
        for i in range(20):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                if ss == 0:
                    # 生肖---尾数各随机一个
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('连码--- 三全中---肖串尾数：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---肖串尾数异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                # 连码--- 三全中---肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_full3qz_xcws_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中--肖串尾数')
        for i in range(100):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                # 生肖随机一个
                if ss == 0:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---三全中--肖串尾数：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                # # 尾数随机一个
                if ss == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---三全中--肖串尾数：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---肖串尾数异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                # 连码--- 三全中---肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break
                
    def lm_full3qz_jcp(self, row):
        # 连码
        self.base_driver.click(self.config_dict_marksix['LIANMA'])
        self.base_driver.forced_wait(1)
        # 连码---三全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        # 连码---三全中---交叉碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        # 新增柱列
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 8))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 尾选三
                if s0 == 0:
                    # 尾数
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        pass
                    else:
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a0)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a1)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('尾数')
                # 数字选4
                if s0 == 1:
                    if s2 == s3 or s2 == s4 or s3 == s4:
                        pass
                    else:
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])

                        if s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a4)

                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                        if s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('数字')
                # 生肖--色波
                if s0 == 2:
                    if s1 == 0:
                        # 三个生肖
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                            pass
                        else:
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a0)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a1)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('生肖--色波')
                    if s1 == 2:
                        # 三个生肖
                        if a0 == a1 or a0 == a2 or a1 == a2:
                            pass
                        else:
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a0)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a1)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('生肖--色波')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---交叉碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---交叉碰异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                # 连码--- 三全中---交叉碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break
    '''
    def lm_full4_jcp_error(self, row):
        # 连码
        self.base_driver.click(self.config_dict_marksix['LIANMA'])
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        # 连码---四全中---交叉碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')

        # self.base_driver.forced_wait(3)

        # 新增柱列
        for i in range(2000000000):
            s0 = random.choice(range(0, 3))
            s1 = random.choice(range(0, 8))
            s2 = random.choice(range(0, 5))
            s3 = random.choice(range(0, 5))
            s4 = random.choice(range(0, 5))
            s5 = random.choice(range(0, 5))

            c0 = random.sample(range(0, 5), 4)
            a0 = random.choice(range(0, 10))

            a1 = random.choice(range(0, 10))
            a2 = random.choice(range(0, 10))
            a3 = random.choice(range(0, 10))
            a4 = random.choice(range(0, 10))
            a5 = random.choice(range(0, 9))

            b0 = random.choice(range(0, 10))
            b1 = random.choice(range(0, 5))
            # 数字选1
            if s0 == 0:
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                print('s111111:   ' + str(s2))
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.forced_wait(3)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])

                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                print('s22222:    ' + str(s2))
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)

            # 数学选2
            if s0 == 1:
                if s2 == s3:
                    pass
                else:
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                    if s2 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s2 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s2 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s2 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s2 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                    if s3 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s3 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s3 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s3 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s3 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---四全中---数学选2：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                    if s2 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s2 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s2 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s2 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s2 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                    if s3 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s3 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s3 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s3 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s3 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)

            if s0 == 2:
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                if s3 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s3 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s3 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s3 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s3 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                if s4 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s4 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s4 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s4 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s4 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                if s3 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s3 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s3 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s3 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s3 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                if s4 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s4 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s4 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s4 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s4 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                print('数字')


    '''

    def lm_full3qz_dt(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---胆拖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if a0 == b0 or a1 == b1 or a2 == b2 or a3 == b3 or a4 == b4:
                    pass
                else:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s0 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s0 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s0 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)

                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)

                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---胆拖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_full3qz_dt_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---胆拖')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                if s0 == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---胆拖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_full3qz_dtsb(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---胆拖色波')
        for i in range(5):
            try:
                s0 = random.choice(range(0, 1))
                s1 = random.choice(range(0, 5))
                c0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)

                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---胆拖色波')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
                self.base_driver.forced_wait(1)
                break

    def lm_full3qz_dtsb_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---胆拖色波')
        # 任意选择一个胆
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---三全中---胆拖色波：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---胆拖色波')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
                self.base_driver.forced_wait(1)
                break
        # 任选一个色波
        try:
            c0 = random.choice(range(0, 3))
            self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
            print('连码---特串---胆拖生肖：  ' + ' ' + str(s))
            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---胆拖色波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('连码---三全中---胆拖色波')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 连码
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
            self.base_driver.forced_wait(1)
            # 连码---三全中---胆拖色波
            self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
            self.base_driver.forced_wait(1)
            self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
            self.base_driver.forced_wait(1)

    def lm_full3qz_dtsx(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---胆拖生肖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，一个拖
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 任意选择一个胆，二个拖
                if s0 == 1:
                    if s1 == 0:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])

                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    else:
                        pass
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---胆拖生肖')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_full3qz_dtsx_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全中---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---胆拖生肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                # 任选一个拖
                if s0 == 1:
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)

                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                # 任选二个拖
                if s0 == 2:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    else:
                        pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三全中---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全中---胆拖生肖')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全中---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '1')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    def lm_full3z2(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二')
        # 随机抽取4个号码
        for i in range(20):
            try:
                s0 = random.choice(range(0, 8))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机三个号码
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == s2 or s1 == s3 or s2 == s3:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机四个号码
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                            or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机五个号码
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机五个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机六个号码
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5 \
                            or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b2 == b3 or b2 == b4 or b2 == b5 or b3 == b4 or b3 == b5 or b4 == b5:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机六个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机七个号码
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:

                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机七个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机八个号码
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机八个号码')
                    else:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机九个号码
                if s0 == 6:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:

                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('三中二随机九个号码')
                # 随机十个号码
                if s0 == 7:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('三中二随机十个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二
                self.base_driver.clicks(self.config_dict_marksix['FULLIN4'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('三中二任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                # 任意两个
                if s0 == 1:
                    if s1 == s2:
                        pass
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('三中二任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], b0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], b1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], b2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], b3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], b4)
                # 任意11个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a2 == a3 or b0 == b1 or b2 == b3 or a4 == b4:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('三中二任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('三中二任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('三中二任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('三中二任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('三中二任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('三中二任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], a4)
                    print('三中二随机11个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二
                self.base_driver.clicks(self.config_dict_marksix['FULLIN4'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_zfh(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二---正/副号
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---三全中---正/副号')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 8))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机三个
                if s0 == 0:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机三个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机四个：  ' + ' ' + str(i))
                # 随机四个
                if s0 == 1:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机四个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机四个：  ' + ' ' + str(i))
                # 随机五个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机五个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机五个：  ' + ' ' + str(i))
                # 随机六个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('三中二随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 7:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('三中二随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_zfh_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        # 连码---特串---正/副号
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---四全中---正/副号')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 任意两个
                if s0 == 1:
                    if s1 == s2:
                        pass
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                # 特殊选择三个号码--- 选择四个，去掉正号
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        # 去掉正
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('特殊选择四个号码--- 选择五个，去掉正号：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                # 任意11个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a2 == a3 or b0 == b1 or b2 == b3 or a4 == b4:
                        pass
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('任意11个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], b3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    print('随机11个号码')
                    # 连码
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_xcws(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三全二---肖串尾数
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---三全二---肖串尾数')
        for i in range(20):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                if ss == 0:
                    # 生肖---尾数各随机一个
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])

                    print('三中二随机二个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全二---肖串尾数注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全二---肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_xcws_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二---肖串尾数
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二--肖串尾数')
        for i in range(100):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                # 生肖随机一个
                if ss == 0:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                # # 尾数随机一个
                if ss == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    print('尾数随机一个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三全二---肖串尾数注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三全二---肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_jcp(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        # 连码---三中二---交叉碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        # 新增柱列
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 8))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 尾选三
                if s0 == 0:
                    # 尾数
                    if a0 == a1 or a0 == a2 or a1 == a2:
                        pass
                    else:
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a0)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a1)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                        self.base_driver.clicks(self.config_dict_marksix['LMJXPWS'], a2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('尾数')
                # 数字选4
                if s0 == 1:
                    if s2 == s3 or s2 == s4 or s3 == s4:
                        pass
                    else:
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                        if s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])

                        if s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a4)

                        self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                        if s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                        if s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                        if s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                        if s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                        if s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('数字')
                # 生肖--色波
                if s0 == 2:
                    if s1 == 0:
                        # 三个生肖
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3:
                            pass
                        else:
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a0)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a1)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('生肖--色波')
                    if s1 == 2:
                        # 三个生肖
                        if a0 == a1 or a0 == a2 or a1 == a2:
                            pass
                        else:
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a0)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a1)
                            self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                            self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('生肖--色波')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---交叉碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二---交叉碰注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---交叉碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    '''
    def lm_full4_jcp_error(self, row):
        # 连码
        self.base_driver.click(self.config_dict_marksix['LIANMA'])
        self.base_driver.forced_wait(1)
        # 连码---四全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        # 连码---四全中---交叉碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')

        # self.base_driver.forced_wait(3)

        # 新增柱列
        for i in range(2000000000):
            s0 = random.choice(range(0, 3))
            s1 = random.choice(range(0, 8))
            s2 = random.choice(range(0, 5))
            s3 = random.choice(range(0, 5))
            s4 = random.choice(range(0, 5))
            s5 = random.choice(range(0, 5))

            c0 = random.sample(range(0, 5), 4)
            a0 = random.choice(range(0, 10))

            a1 = random.choice(range(0, 10))
            a2 = random.choice(range(0, 10))
            a3 = random.choice(range(0, 10))
            a4 = random.choice(range(0, 10))
            a5 = random.choice(range(0, 9))

            b0 = random.choice(range(0, 10))
            b1 = random.choice(range(0, 5))
            # 数字选1
            if s0 == 0:
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                print('s111111:   ' + str(s2))
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.forced_wait(3)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])

                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                print('s22222:    ' + str(s2))
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)

            # 数学选2
            if s0 == 1:
                if s2 == s3:
                    pass
                else:
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                    if s2 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s2 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s2 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s2 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s2 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                    if s3 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s3 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s3 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s3 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s3 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---四全中---数学选2：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                    if s2 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s2 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s2 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s2 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s2 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                    self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                    if s3 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                    if s3 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                    if s3 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                    if s3 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                    if s3 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)

            if s0 == 2:
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                if s3 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s3 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s3 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s3 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s3 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                if s4 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s4 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s4 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s4 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s4 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
                if s2 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s2 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s2 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s2 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s2 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
                if s3 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s3 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s3 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s3 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s3 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                self.base_driver.click(self.config_dict_marksix['LMJXPXZLN2'])
                if s4 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
                if s4 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
                if s4 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a2)
                if s4 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a3)
                if s4 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], a5)
                print('数字')


    '''

    def lm_full3z2_dt(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二---胆拖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if a0 == b0 or a1 == b1 or a2 == b2 or a3 == b3 or a4 == b4:
                    pass
                else:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s0 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s0 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s0 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)

                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---交叉碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二---交叉碰注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---交叉碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_dt_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二---胆拖')
        for i in range(30):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                if s0 == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二---胆拖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_dtsb(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二---胆拖色波')
        for i in range(5):
            try:
                s0 = random.choice(range(0, 1))
                s1 = random.choice(range(0, 5))            
                c0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)

                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二---胆拖色波下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_dtsb_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二---胆拖色波')
        # 任意选择一个胆
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---三中二---胆拖色波：  ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二---胆拖色波异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
                self.base_driver.forced_wait(1)
                break
        # 任选一个色波
        try:
            c0 = random.choice(range(0, 3))
            self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
            print('连码---特串---胆拖生肖：  ' + ' ' + str(s))
            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---胆拖色波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('连码---三中二---胆拖色波异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 连码
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
            self.base_driver.forced_wait(1)
            # 连码---三中二---胆拖色波
            self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
            self.base_driver.forced_wait(1)
            self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
            self.base_driver.forced_wait(1)

    def lm_full3z2_dtsx(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---三中二---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---三中二---胆拖生肖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，一个拖
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 任意选择一个胆，二个拖
                if s0 == 1:
                    if s1 == 0:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
    
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    else:
                        pass
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二---胆拖生肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_full3z2_dtsx_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖生肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                # 任选一个拖
                if s0 == 1:
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('合肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)

                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                # 任选二个拖
                if s0 == 2:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    else:
                        pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---三中二---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---三中二---胆拖生肖异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---三中二---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '2')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------

    def lm_fullin2qz(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(5)
        print('进入连码---二全中')
        # 随机抽取4个号码
        for i in range(20):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机二个号码
                if s0 == 0:
                    print('二全中随机二个号码')
                    if a0 == a1 or b0 == b1:
                        if s1 == s2:
                            pass
                        else:
                            if s1 == 0 or s2 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机三个号码
                if s0 == 1:
                    print('二全中随机三个号码')
                    if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == s2 or s1 == s3 or s2 == s3 :
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机四个号码
                if s0 == 2:
                    print('二全中随机四个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                            or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机五个号码
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机五个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机六个号码
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5 \
                            or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b2 == b3 or b2 == b4 or b2 == b5 or b3 == b4 or b3 == b5 or b4 == b5:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机六个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机七个号码
                if s0 == 5:
                    print('二全中随机七个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机八个号码
                if s0 == 6:
                    print('二全中随机八个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])

                    else:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机九个号码
                if s0 == 7:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:

                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('二全中随机九个号码')
                # 随机十个号码
                if s0 == 8:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('二全中随机十个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                break
                
    def lm_fullin2qz_error(self, row): 
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(3)
                break

    def lm_fullin2qz_zfh(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---正/副号
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('连码---二全中---正/副号')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 9))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机二个
                if s0 == 0:
                    if s1 == s2:
                        pass
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机二个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], '1')
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], '1')
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], '1')
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], '1')
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], '1')
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机二个：  ' + ' ' + str(i))
                # 随机三个
                if s0 == 1:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机三个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机三个：  ' + ' ' + str(i))
                # 随机四个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机四个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机四个：  ' + ' ' + str(i))
                # 随机五个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机五个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机五个：  ' + ' ' + str(i))
                # 随机六个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二全中随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 8:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---正/副号.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---正/副号下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_zfh_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---正/副号
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        # 连码---二全中---正/副号
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('连码---二全中---正/副号')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---正/副号.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---正/副号下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_sxdp(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---生肖对碰
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---生肖对碰')

        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                # 生肖左右随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('二全中生肖对碰：  ' + ' ' + str(i))
                # 生肖左随机两个
                if s0 == 1:
                    if a0 == a1:
                        pass
                    else:

                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中生肖对碰：  ' + ' ' + str(i))
                # 生肖后随机两个
                if s0 == 2:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中生肖对碰：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---生肖对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---生肖对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---生肖对碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_sxdp_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---尾数对碰')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                # 生肖左随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中生肖左随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                # 生肖右随机一个
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中生肖右随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---生肖对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---生肖对碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_wsdp(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---尾数对碰')
        # 连码---二全中----12
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                # 尾数各随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('二全中尾数每边1个5-9：  ' + ' ' + str(i))
                # 生肖两个
                if s0 == 1:
                    if a0 == a1:
                        pass
                    else:

                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中尾数两个5-9：  ' + ' ' + str(i))
                # 尾数两个
                if s0 == 2:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二全中尾数两个5-9：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_wsdp_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---尾数对碰')

        # 连码---特串---尾数对碰
        for i in range(100):
            try:
                s0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                # 尾数各随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中尾数每边1个5-9：  ' + ' ' + str(i))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                # 生肖两个
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中尾数每边1个5-9：  ' + ' ' + str(i))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_xcws(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---肖串尾数')
        for i in range(10):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                if ss == 0:
                    # 生肖---尾数各随机一个
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('二全中肖串尾数随机二个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---肖串尾数下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_xcws_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入二全中---连码---特串--肖串尾数')
        for i in range(100):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                # 生肖随机一个
                if ss == 0:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                # # 尾数随机一个
                if ss == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---肖串尾数下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

        # def lm_fullinntc_jcp(self, row):
        #     # 连码
        #     self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        #     self.base_driver.forced_wait(1)
        #     # 连码---特串---交叉碰
        #     self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        #     self.base_driver.forced_wait(1)
        #
        #     self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        #     self.base_driver.forced_wait(1)
        #     print('进入连码---特串---交叉碰')
        #
        #     # self.base_driver.forced_wait(3)
        #
        #     # 新增柱列
        #     for i in range(1000000000):
        #         s0 = random.choice(range(0, 6))
        #         s1 = random.choice(range(0, 5))
        #         s2 = random.choice(range(0, 2))
        #
        #
        #         # a0 = random.choice(range(0, 50))
        #         # a1 = random.choice(range(0, 50))
        #         # a2 = random.choice(range(0, 50))
        #         # a3 = random.choice(range(0, 50))
        #         a0 = random.choice(range(0, 10))
        #         a1 = random.choice(range(0, 10))
        #         a2 = random.choice(range(0, 10))
        #         a3 = random.choice(range(0, 10))
        #         a4 = random.choice(range(0, 10))
        #
        #         b0 = random.choice(range(0, 9))
        #         b1 = random.choice(range(0, 9))
        #
        #         c0 = random.choice(range(0, 5))
        #         # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #         if s0 == 0:
        #             # 每一柱列选择一个号码
        #             if s1 == s2:
        #                 pass
        #                 # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #                 # # 尾巴1---尾0 任意两个
        #                 # if s1 == 0:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a1)
        #                 # if s1 == 1:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
        #                 # if s1 == 2:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a1)
        #                 # if s1 == 3:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a1)
        #                 # if s1 == 4:
        #                 #     if b0 == b1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b1)
        #                 # self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        #             else:
        #                 self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #
        #                 #self.base_driver.forced_wait(1)
        #                 #
        #                 # if s1 == 0:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], '1')
        #                 # if s1 == 1:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], '1')
        #                 # if s1 == 2:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], '1')
        #                 # if s1 == 3:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], '1')
        #                 if s1 == 4:
        #                     print(b0)
        #                     # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #                     #self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b0)
        #                     self.base_driver.click(self.config_dict_marksix['aaaaa'])
        #                # self.base_driver.forced_wait(1)
        #                 self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
        #             #     #self.base_driver.forced_wait(1)
        #             #
        #                 if s2 == 0:
        #                     #self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], '1')
        #                     self.base_driver.click(self.config_dict_marksix['sssss'])
        #             #     if s2 == 1:
        #             #         self.base_driver.clicks(self.config_dict_marksix['LMJXPSX2'], '1')
        #             #     #self.base_driver.forced_wait(1)
        #             #    # # self.base_driver.forced_wait(0.5)
        #             self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        #             #self.base_driver.forced_wait(1)
        #                #  print('==========================')
        #             # except Exception as e:
        #             #     print(e)
        #             #     print('下注异常')
        #             #     print('异常的数组是:' + ' ' + str(a0) + ' ' + str(a1))
        #             #     self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
        #             #     self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #             #     self.base_driver.forced_wait(3)
        #             #     pass

    def lm_fullin2qz_dt(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---胆拖')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if a0 == b0 or a1 == b1 or a2 == b2 or a3 == b3 or a4 == b4:
                    pass
                else:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s0 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s0 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s0 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                        print('二全中---胆拖' + str(i))
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---胆拖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_dt_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---胆拖')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中---胆拖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                if s0 == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中---胆拖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---胆拖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_dtsb(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---胆拖色波')
        for i in range(5):
            try:
                s0 = random.choice(range(0, 1))
                s1 = random.choice(range(0, 5))
                c0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---胆拖色波下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2qz_dtsb_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---胆拖色波')
        # 任意选择一个胆
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---二全中---胆拖色波：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---胆拖色波下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
                self.base_driver.forced_wait(1)
                break
        # 任选一个色波
        try:
            c0 = random.choice(range(0, 3))
            self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
            print('连码---特串---胆拖生肖：  ' + ' ' + str(s))
            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---胆拖色波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('连码---二全中---胆拖色波下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 连码
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
            self.base_driver.forced_wait(1)
            # 连码---二全中---胆拖色波
            self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
            self.base_driver.forced_wait(1)
            self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
            self.base_driver.forced_wait(1)

    def lm_fullin2qz_dtsx(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---胆拖生肖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，一个拖
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 任意选择一个胆，二个拖
                if s0 == 1:
                    if s1 == 0:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---二全中---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---二全中---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---二全中---胆拖生肖：  ' + ' ' + str(i))
                    else:
                        pass
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---胆拖生肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
                self.base_driver.forced_wait(1)

    def lm_fullin2qz_dtsx_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二全中---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
        self.base_driver.forced_wait(1)
        print('进入连码---二全中---胆拖生肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---二全中---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                # 任选一个拖
                if s0 == 1:
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---二全中---胆拖生肖: ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)

                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---二全中---胆拖生肖：  ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                # 任选二个拖
                if s0 == 2:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---二全中---胆拖生肖： ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---二全中---胆拖生肖：  ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---二全中---胆拖生肖：  ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    else:
                        pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二全中---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二全中---胆拖生肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二全中---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '3')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
                self.base_driver.forced_wait(1)
                break

    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    def lm_fullin2zt(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(3)
        print('进入连码---二中特')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机二个号码
                if s0 == 0:
                    print('二中特随机二个号码')
                    if a0 == a1 or b0 == b1:
                        if s1 == s2:
                            pass
                        else:
                            if s1 == 0 or s2 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机三个号码
                if s0 == 1:
                    print('二中特随机三个号码')
                    if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == s2 or s1 == s3 or s2 == s3 :
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机四个号码
                if s0 == 2:
                    print('二中特随机四个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                            or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机五个号码
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特随机五个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机六个号码
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5 \
                            or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b2 == b3 or b2 == b4 or b2 == b5 or b3 == b4 or b3 == b5 or b4 == b5:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特随机六个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机七个号码
                if s0 == 5:
                    print('二中特随机七个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机八个号码
                if s0 == 6:
                    print('二中特随机八个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])

                    else:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机九个号码
                if s0 == 7:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:

                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('二中特随机九个号码')
                # 随机十个号码
                if s0 == 8:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('二中特随机十个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(3)
                break

    def lm_fullin2zt_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---二中特：  ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(3)
                break
        
    def lm_fullin2zt_zfh(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特---正/副号
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---正/副号')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 9))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机二个
                if s0 == 0:
                    if s1 == s2:
                        pass
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], '1')
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], '1')
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], '1')
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], '1')
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], '1')
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                # 随机三个
                if s0 == 1:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('随机三个：  ' + ' ' + str(i))
                # 随机四个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('随机四个：  ' + ' ' + str(i))
                # 随机五个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                # 随机六个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                # 随机七个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                # 随机八个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('二中特---正/副号随机二个：  ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                # 随机十个
                if s0 == 8:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('二中特---正/副号随机二个：  ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---正/副号.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---正/副号下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_zfh_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---正/副号')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二中特---正/副号随机二个：' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---正/副号.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---正/副号下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_sxdp(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        # 连码---二中特---生肖对碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---生肖对碰')
        for i in range(5):
            try:
                s0 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                # 生肖左右随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('生肖左右随机一个-9：  ' + ' ' + str(i))
                # 生肖左随机两个
                if s0 == 1:
                    if a0 == a1:
                        pass
                    else:

                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('生肖左随机两个：  ' + ' ' + str(i))
                # 生肖后随机两个
                if s0 == 2:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('生肖后随机两个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---生肖对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---正/副号下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                # 连码---二中特---生肖对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_sxdp_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---尾数对碰')
        # 连码---特串---尾数对碰
        for i in range(50):
            try:
                s0 = random.choice(range(0, 2))              
                a0 = random.choice(range(0, 6))
                # 生肖左随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('生肖左随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                # 生肖右随机一个
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('生肖右随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                # 连码---二中特---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_wsdp(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---尾数对碰')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                # 尾数各随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('尾数每边1个5-9：  ' + ' ' + str(i))
                # 生肖两个
                if s0 == 1:
                    if a0 == a1:
                        pass
                    else:

                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('尾数两个5-9：  ' + ' ' + str(i))
                # 尾数两个
                if s0 == 2:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('尾数两个5-9：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                # 连码---二中特---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_wsdp_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---尾数对碰')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                # 尾数各随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('尾数每边1个5-9：  ' + ' ' + str(i))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                # 生肖两个
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('尾数每边1个5-9：  ' + ' ' + str(i))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                # 连码---二中特---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_xcws(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入二全中---连码---特串---肖串尾数')
        for i in range(10):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                if ss == 0:
                    # 生肖---尾数各随机一个
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
    
                    print('随机二个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                # 连码---二中特---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_xcws_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)

        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特--肖串尾数')
        for i in range(100):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                # 生肖随机一个
                if ss == 0:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---二中特--肖串尾数：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                # # 尾数随机一个
                if ss == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---二中特--肖串尾数：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    print('连码---二中特--肖串尾数：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特--肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特--肖串尾数下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                # 连码---二中特--肖串尾数
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
                self.base_driver.forced_wait(1)
                break

       

        # def lm_fullinntc_jcp(self, row):
        #     # 连码
        #     self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        #     self.base_driver.forced_wait(1)
        #     # 连码---特串---交叉碰
        #     self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        #     self.base_driver.forced_wait(1)
        #
        #     self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
        #     self.base_driver.forced_wait(1)
        #     print('进入连码---特串---交叉碰')
        #
        #     # self.base_driver.forced_wait(3)
        #
        #     # 新增柱列
        #     for i in range(1000000000):
        #         s0 = random.choice(range(0, 6))
        #         s1 = random.choice(range(0, 5))
        #         s2 = random.choice(range(0, 2))
        #
        #
        #         # a0 = random.choice(range(0, 50))
        #         # a1 = random.choice(range(0, 50))
        #         # a2 = random.choice(range(0, 50))
        #         # a3 = random.choice(range(0, 50))
        #         a0 = random.choice(range(0, 10))
        #         a1 = random.choice(range(0, 10))
        #         a2 = random.choice(range(0, 10))
        #         a3 = random.choice(range(0, 10))
        #         a4 = random.choice(range(0, 10))
        #
        #         b0 = random.choice(range(0, 9))
        #         b1 = random.choice(range(0, 9))
        #
        #         c0 = random.choice(range(0, 5))
        #         # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #         if s0 == 0:
        #             # 每一柱列选择一个号码
        #             if s1 == s2:
        #                 pass
        #                 # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #                 # # 尾巴1---尾0 任意两个
        #                 # if s1 == 0:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a1)
        #                 # if s1 == 1:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
        #                 # if s1 == 2:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a1)
        #                 # if s1 == 3:
        #                 #     if a0 == a1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a1)
        #                 # if s1 == 4:
        #                 #     if b0 == b1:
        #                 #         pass
        #                 #     else:
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b0)
        #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b1)
        #                 # self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        #             else:
        #                 self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #
        #                 #self.base_driver.forced_wait(1)
        #                 #
        #                 # if s1 == 0:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], '1')
        #                 # if s1 == 1:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], '1')
        #                 # if s1 == 2:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], '1')
        #                 # if s1 == 3:
        #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], '1')
        #                 if s1 == 4:
        #                     print(b0)
        #                     # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #                     #self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b0)
        #                     self.base_driver.click(self.config_dict_marksix['aaaaa'])
        #                # self.base_driver.forced_wait(1)
        #                 self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
        #             #     #self.base_driver.forced_wait(1)
        #             #
        #                 if s2 == 0:
        #                     #self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], '1')
        #                     self.base_driver.click(self.config_dict_marksix['sssss'])
        #             #     if s2 == 1:
        #             #         self.base_driver.clicks(self.config_dict_marksix['LMJXPSX2'], '1')
        #             #     #self.base_driver.forced_wait(1)
        #             #    # # self.base_driver.forced_wait(0.5)
        #             self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        #             #self.base_driver.forced_wait(1)
        #                #  print('==========================')
        #             # except Exception as e:
        #             #     print(e)
        #             #     print('下注异常')
        #             #     print('异常的数组是:' + ' ' + str(a0) + ' ' + str(a1))
        #             #     self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
        #             #     self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
        #             #     self.base_driver.forced_wait(3)
        #             #     pass

    def lm_fullin2zt_dt(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---胆拖')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if a0 == b0 or a1 == b1 or a2 == b2 or a3 == b3 or a4 == b4:
                    pass
                else:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s0 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s0 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s0 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)

                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)

                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特--肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特--肖串尾数下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_dt_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---胆拖')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                if s0 == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---胆拖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_dtsb(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---胆拖色波')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 1))
                s1 = random.choice(range(0, 5))
                c0 = random.choice(range(0, 2))             
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)

                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖色波下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_dtsb_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---胆拖色波')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---二中特---胆拖色波：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖色波.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖色波下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---胆拖色波
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
                self.base_driver.forced_wait(1)
                break
        # 任选一个色波
        try:
            c0 = random.choice(range(0, 3))
            self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
            print('连码---特串---胆拖生肖：  ' + ' ' + str(s))
            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖色波.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('连码---二中特---胆拖色波下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 连码
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
            self.base_driver.forced_wait(1)
            # 连码---二中特---胆拖色波
            self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
            self.base_driver.forced_wait(1)
            self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
            self.base_driver.forced_wait(1)

    def lm_fullin2zt_dtsx(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---二中特---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
        self.base_driver.forced_wait(1)
        print('进入连码---二中特---胆拖生肖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，一个拖
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 任意选择一个胆，二个拖
                if s0 == 1:
                    if s1 == 0:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---二中特---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---二中特---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---二中特---胆拖生肖：  ' + ' ' + str(i))
                    else:
                        pass
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖生肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
                self.base_driver.forced_wait(1)
                break

    def lm_fullin2zt_dtsx_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖生肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---二中特---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                # 任选一个拖
                if s0 == 1:
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---二中特---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)

                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---二中特---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                # 任选二个拖
                if s0 == 2:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---二中特---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---二中特---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---二中特---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    else:
                        pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖生肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---二中特---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '4')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
                self.base_driver.forced_wait(1)
                break

    # -------------------------------------------------------------
    # -------------------------------------------------------------
    # -------------------------------------------------------------
    def lm_fullinntc(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(3)
        print('进入二全中---连码---特串')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机二个号码
                if s0 == 0:
                    print('特串随机二个号码')
                    if a0 == a1 or b0 == b1:
                        if s1 == s2:
                            pass
                        else:
                            if s1 == 0 or s2 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机三个号码
                if s0 == 1:
                    print('特串随机三个号码')
                    if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == s2 or s1 == s3 or s2 == s3 :
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机四个号码
                if s0 == 2:
                    print('特串随机四个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                            or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                        if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                            pass
                        else:
                            if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        pass
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机五个号码
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('特串随机五个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机六个号码
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a1 == a2 or a1 == a3 or a1 == a4 \
                            or a1 == a5 or a2 == a3 or a2 == a4 or a2 == a5 or a3 == a4 or a3 == a5 or a4 == a5 \
                            or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b2 == b3 or b2 == b4 or b2 == b5 or b3 == b4 or b3 == b5 or b4 == b5:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('特串随机六个号码')
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机七个号码
                if s0 == 5:
                    print('特串随机七个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a5)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b6)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机八个号码
                if s0 == 6:
                    print('特串随机八个号码')
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a2 == a3 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            if a0 == a1:
                                pass
                            else:
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a1)
                                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机九个号码
                if s0 == 7:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:

                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('特串随机九个号码')
                # 随机十个号码
                if s0 == 8:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], j)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF101_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF111_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF121_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF131_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZF141_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('特串随机十个号码')
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(3)
                break

    def lm_fullinntc_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        print('进入二全中---连码---特串')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('二全中---连码---特串：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['FULLIN4N41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖生肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(3)
                break

    def lm_fullinntc_zfh(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---正/副号
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---正/副号')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 9))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机二个
                if s0 == 0:
                    if s1 == s2:
                        pass
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---正/副号随机二个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], '1')
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], '1')
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], '1')
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], '1')
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], '1')
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机二个：  ' + ' ' + str(i))
                # 随机三个
                if s0 == 1:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---正/副号随机三个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机三个：  ' + ' ' + str(i))
                # 随机四个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---正/副号随机四个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机四个：  ' + ' ' + str(i))
                # 随机五个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机五个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机五个：  ' + ' ' + str(i))
                # 随机六个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---正/副号随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---正/副号随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---正/副号随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---正/副号随机九个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 8:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---正/副号随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('特串随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖生肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_zfh_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---正/副号')
        for i in range(50):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---正/副号任意二个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['LMZFN41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---二中特---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---二中特---胆拖生肖下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串---正/副号
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_sxdp(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        # 连码 - --特串 - --生肖对碰
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---生肖对碰')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                # 生肖左右随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('生肖左右随机一个-9：  ' + ' ' + str(i))
                # 生肖左随机两个
                if s0 == 1:
                    if a0 == a1:
                        pass
                    else:

                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('生肖左随机两个：  ' + ' ' + str(i))
                # 生肖后随机两个
                if s0 == 2:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('生肖后随机两个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---生肖对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---生肖对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串---生肖对碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码 - --特串 - --生肖对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '1')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_sxdp_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
        self.base_driver.forced_wait(1)
        print('进入连码---特串--生肖对碰')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                # 生肖左随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('生肖左随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN0'], a0)
                # 生肖右随机一个
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('生肖右随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMSXDPN1'], a0)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---生肖对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---生肖对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串---生肖对碰
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---生肖对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '2')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_wsdp(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---尾数对碰')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                a0 = random.choice(range(0, 5))
                a1 = random.choice(range(0, 5))
                # 尾数各随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a1)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('尾数每边1个5-9：  ' + ' ' + str(i))
                # 生肖两个
                if s0 == 1:
                    if a0 == a1:
                        pass
                    else:

                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('尾数两个5-9：  ' + ' ' + str(i))
                # 尾数两个
                if s0 == 2:
                    if a0 == a1:
                        pass
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('尾数两个5-9：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_wsdp_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---尾数对碰')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 5))
                # 尾数各随机一个
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('尾数每边1个5-9：  ' + ' ' + str(i))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN0'], a0)
                # 生肖两个
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('尾数每边1个5-9：  ' + ' ' + str(i))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    self.base_driver.clicks(self.config_dict_marksix['LMWSDPN1'], a0)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---尾数对碰.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_xcws(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入二全中---连码---特串---肖串尾数')
        for i in range(10):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                if ss == 0:
                    # 生肖---尾数各随机一个
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    print('连码---特串---正/副号随机二个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_xcws_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '4')
        self.base_driver.forced_wait(1)
        print('进入连码---特串--肖串尾数')
        for i in range(50):
            try:
                ss = random.choice(range(0, 2))
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 6))
                a1 = random.choice(range(0, 6))
                a2 = random.choice(range(0, 5))
                a3 = random.choice(range(0, 5))
                # 生肖随机一个
                if ss == 0:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN0'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCN1'], a1)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                # # 尾数随机一个
                if ss == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS0'], a2)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['LMXCWS1'], a3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    print('尾数随机一个：  ' + ' ' + str(i))
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---肖串尾数.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---尾数对碰
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '3')
                self.base_driver.forced_wait(1)
                break

    # def lm_fullinntc_jcp(self, row):
    #     # 连码
    #     self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
    #     self.base_driver.forced_wait(1)
    #     # 连码---特串---交叉碰
    #     self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
    #     self.base_driver.forced_wait(1)
    #
    #     self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '5')
    #     self.base_driver.forced_wait(1)
    #     print('进入连码---特串---交叉碰')
    #
    #     # self.base_driver.forced_wait(3)
    #
    #     # 新增柱列
    #     for i in range(1000000000):
    #         s0 = random.choice(range(0, 6))
    #         s1 = random.choice(range(0, 5))
    #         s2 = random.choice(range(0, 2))
    #
    #
    #         # a0 = random.choice(range(0, 50))
    #         # a1 = random.choice(range(0, 50))
    #         # a2 = random.choice(range(0, 50))
    #         # a3 = random.choice(range(0, 50))
    #         a0 = random.choice(range(0, 10))
    #         a1 = random.choice(range(0, 10))
    #         a2 = random.choice(range(0, 10))
    #         a3 = random.choice(range(0, 10))
    #         a4 = random.choice(range(0, 10))
    #
    #         b0 = random.choice(range(0, 9))
    #         b1 = random.choice(range(0, 9))
    #
    #         c0 = random.choice(range(0, 5))
    #         # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
    #         if s0 == 0:
    #             # 每一柱列选择一个号码
    #             if s1 == s2:
    #                 pass
    #                 # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
    #                 # # 尾巴1---尾0 任意两个
    #                 # if s1 == 0:
    #                 #     if a0 == a1:
    #                 #         pass
    #                 #     else:
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a0)
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], a1)
    #                 # if s1 == 1:
    #                 #     if a0 == a1:
    #                 #         pass
    #                 #     else:
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a0)
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], a1)
    #                 # if s1 == 2:
    #                 #     if a0 == a1:
    #                 #         pass
    #                 #     else:
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a0)
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], a1)
    #                 # if s1 == 3:
    #                 #     if a0 == a1:
    #                 #         pass
    #                 #     else:
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a0)
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], a1)
    #                 # if s1 == 4:
    #                 #     if b0 == b1:
    #                 #         pass
    #                 #     else:
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b0)
    #                 #         self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b1)
    #                 # self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
    #             else:
    #                 self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
    #
    #                 #self.base_driver.forced_wait(1)
    #                 #
    #                 # if s1 == 0:
    #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP01_10'], '1')
    #                 # if s1 == 1:
    #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP11_20'], '1')
    #                 # if s1 == 2:
    #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP21_30'], '1')
    #                 # if s1 == 3:
    #                 #     self.base_driver.clicks(self.config_dict_marksix['LMJXP31_40'], '1')
    #                 if s1 == 4:
    #                     print(b0)
    #                     # self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
    #                     #self.base_driver.clicks(self.config_dict_marksix['LMJXP41_49'], b0)
    #                     self.base_driver.click(self.config_dict_marksix['aaaaa'])
    #                # self.base_driver.forced_wait(1)
    #                 self.base_driver.click(self.config_dict_marksix['LMJXPXZLN1'])
    #             #     #self.base_driver.forced_wait(1)
    #             #
    #                 if s2 == 0:
    #                     #self.base_driver.clicks(self.config_dict_marksix['LMJXPSX1'], '1')
    #                     self.base_driver.click(self.config_dict_marksix['sssss'])
    #             #     if s2 == 1:
    #             #         self.base_driver.clicks(self.config_dict_marksix['LMJXPSX2'], '1')
    #             #     #self.base_driver.forced_wait(1)
    #             #    # # self.base_driver.forced_wait(0.5)
    #             self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
    #             #self.base_driver.forced_wait(1)
    #                #  print('==========================')
    #             # except Exception as e:
    #             #     print(e)
    #             #     print('下注异常')
    #             #     print('异常的数组是:' + ' ' + str(a0) + ' ' + str(a1))
    #             #     self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
    #             #     self.base_driver.click(self.config_dict_marksix['LMJXPXZLN0'])
    #             #     self.base_driver.forced_wait(3)
    #             #     pass

    def lm_fullinntc_dt(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if a0 == b0 or a1 == b1 or a2 == b2 or a3 == b3 or a4 == b4:
                    pass
                else:
                    if s0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s0 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s0 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s0 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s0 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
    
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---胆拖
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_dt_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)

        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖')
        for i in range(10):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                b0 = random.choice(range(0, 10))
                b1 = random.choice(range(0, 10))
                b2 = random.choice(range(0, 10))
                b3 = random.choice(range(0, 10))
                b4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOD41_49'], a4)
                if s0 == 1:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT01_10'], b0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT11_20'], b1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT21_30'], b2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT31_40'], b3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DANTUOT41_49'], b4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---胆拖
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '6')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_dtsb(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖色波')
        for i in range(5):
            try:
                s0 = random.choice(range(0, 1))
                s1 = random.choice(range(0, 5))
                c0 = random.choice(range(0, 2))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，色波
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)

                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---胆拖
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_dtsb_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖色波
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖色波')
        # 任意选择一个胆
        for i in range(10):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('连码---特串---胆拖生肖：  ' + ' ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                if s0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO01_10'], a0)
                if s0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO11_20'], a1)
                if s0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO21_30'], a2)
                if s0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO31_40'], a3)
                if s0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['DTSEBO41_49'], a4)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---胆拖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---尾数对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---胆拖
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '7')
                self.base_driver.forced_wait(1)
                break
        # 任选一个色波
        c0 = random.choice(range(0, 3))
        self.base_driver.clicks(self.config_dict_marksix['DTSEBO'], c0)
        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
        print('连码---特串---胆拖生肖：  ' + ' ' + str(s))
        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])

        print('覆盖完毕------')

    def lm_fullinntc_dtsx(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)
        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖生肖')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 2))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆，一个拖
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 任意选择一个胆，二个拖
                if s0 == 1:
                    if s1 == 0:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])

                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('连码---特串---胆拖生肖：  ' + ' ' + str(i))
                    else:
                        pass
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---胆拖生肖对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
                self.base_driver.forced_wait(1)
                break

    def lm_fullinntc_dtsx_error(self, row):
        # 连码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
        self.base_driver.forced_wait(1)
        # 连码---特串---胆拖生肖
        self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
        self.base_driver.forced_wait(1)

        self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
        self.base_driver.forced_wait(1)
        print('进入连码---特串---胆拖生肖')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                b0 = random.choice(range(0, 3))
                c0 = random.choice(range(0, 6))
                c1 = random.choice(range(0, 6))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 9))
                # 任意选择一个胆
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('连码---特串---胆拖生肖：  ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX11_20'], a1)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX21_30'], a2)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX31_40'], a3)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['DTSX41_49'], a4)
                # 任选一个拖
                if s0 == 1:
                    if b0 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)

                    else:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                # 任选二个拖
                if s0 == 2:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('连码---特串---胆拖生肖：  ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                        self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    if s1 == 1:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS0'], c1)
                    if s1 == 2:
                        if c0 == c1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('连码---特串---胆拖生肖：  ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c0)
                            self.base_driver.clicks(self.config_dict_marksix['DTSXS1'], c1)
                    else:
                        pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-连码---特串---胆拖生肖.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('连码---特串---胆拖生肖对碰下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 连码
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '连码')
                self.base_driver.forced_wait(1)
                # 连码---特串
                self.base_driver.clicks(self.config_dict_marksix['FULLINN'], '5')
                self.base_driver.forced_wait(1)
                # 连码---特串---胆拖生肖
                self.base_driver.clicks(self.config_dict_marksix['ZHENGFUN'], '8')
                self.base_driver.forced_wait(1)
                break
        print('覆盖完毕------')

    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------

    def zm_zmgg(self, row):
        # 正码过关
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码过关')
        js = "var q=document.documentElement.scrollTop=100000"
        self.base_driver.execute_js(js)
        # 随机两个数字
        for i in range(100):
            try:
                s0 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 13))
                a1 = random.choice(range(0, 13))
                a2 = random.choice(range(0, 13))
                a3 = random.choice(range(0, 13))
                a4 = random.choice(range(0, 13))
                a5 = random.choice(range(0, 13))
                b0 = random.choice(range(0, 6))
                b1 = random.choice(range(0, 6))
                b2 = random.choice(range(0, 6))
                b3 = random.choice(range(0, 6))
                b4 = random.choice(range(0, 6))
                b5 = random.choice(range(0, 6))
                # 随机二个数字
                if s0 == 0:
                    if b0 == b1:
                        pass
                    else:
                        if b0 == 0 or b1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ1'], a0)
                        if b0 == 1 or b1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ2'], a1)
                        if b0 == 2 or b1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ3'], a2)
                        if b0 == 3 or b1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ4'], a3)
                        if b0 == 4 or b1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ5'], a4)
                        if b0 == 5 or b1 == 5:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ6'], a5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机三个数字
                if s0 == 1:
                    if b0 == b1 or b0 == b2 or b1 == b2:
                        pass
                    else:
                        if b0 == 0 or b1 == 0 or b2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ1'], a0)
                        if b0 == 1 or b1 == 1 or b2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ2'], a1)
                        if b0 == 2 or b1 == 2 or b2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ3'], a2)
                        if b0 == 3 or b1 == 3 or b2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ4'], a3)
                        if b0 == 4 or b1 == 4 or b2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ5'], a4)
                        if b0 == 5 or b1 == 5 or b2 == 5:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ6'], a5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机四个数字
                if s0 == 2:
                    if b0 == b1 or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                        pass
                    else:
                        if b0 == 0 or b1 == 0 or b2 == 0 or b3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ1'], a0)
                        if b0 == 1 or b1 == 1 or b2 == 1 or b3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ2'], a1)
                        if b0 == 2 or b1 == 2 or b2 == 2 or b3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ3'], a2)
                        if b0 == 3 or b1 == 3 or b2 == 3 or b3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ4'], a3)
                        if b0 == 4 or b1 == 4 or b2 == 4 or b3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ5'], a4)
                        if b0 == 5 or b1 == 5 or b2 == 5 or b3 == 5:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ6'], a5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                # 随机五个数字
                if s0 == 3:
                    if b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 or b1 == b3 or b1 == b4 \
                            or b2 == b3 or b2 == b4 or b3 == b4:
                        pass
                    else:
                        if b0 == 0 or b1 == 0 or b2 == 0 or b3 == 0 or b4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ1'], a0)
                        if b0 == 1 or b1 == 1 or b2 == 1 or b3 == 1 or b4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ2'], a1)
                        if b0 == 2 or b1 == 2 or b2 == 2 or b3 == 2 or b4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ3'], a2)
                        if b0 == 3 or b1 == 3 or b2 == 3 or b3 == 3 or b4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ4'], a3)
                        if b0 == 4 or b1 == 4 or b2 == 4 or b3 == 4 or b4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ5'], a4)
                        if b0 == 5 or b1 == 5 or b2 == 5 or b3 == 5 or b4 == 5:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ6'], a5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                 # 随机六个数字
                if s0 == 4:
                    if b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b1 == b2 or b1 == b3 or b1 == b4 \
                            or b1 == b5 or b2 == b3 or b2 == b4 or b2 == b5 or b3 == b4 or b3 == b5 or b4 == b5:
                        pass
                    else:
                        if b0 == 0 or b1 == 0 or b2 == 0 or b3 == 0 or b4 == 0 or b5 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ1'], a0)
                        if b0 == 1 or b1 == 1 or b2 == 1 or b3 == 1 or b4 == 1 or b5 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ2'], a1)
                        if b0 == 2 or b1 == 2 or b2 == 2 or b3 == 2 or b4 == 2 or b5 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ3'], a2)
                        if b0 == 3 or b1 == 3 or b2 == 3 or b3 == 3 or b4 == 3 or b5 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ4'], a3)
                        if b0 == 4 or b1 == 4 or b2 == 4 or b3 == 4 or b4 == 4 or b5 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ5'], a4)
                        if b0 == 5 or b1 == 5 or b2 == 5 or b3 == 5 or b4 == 5 or b5 == 5:
                            self.base_driver.clicks(self.config_dict_marksix['ZMGGZ6'], a5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('正码过关下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 正码过关
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码过关')
                self.base_driver.forced_wait(1)
                break

    def zm_zmgg_error(self, row):
        # 正码过关
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码过关')
        js = "var q=document.documentElement.scrollTop=100000"
        self.base_driver.execute_js(js)
        # 随机一个数字
        for i in range(100):
            try:
                a0 = random.choice(range(0, 13))
                a1 = random.choice(range(0, 13))
                a2 = random.choice(range(0, 13))
                a3 = random.choice(range(0, 13))
                a4 = random.choice(range(0, 13))
                a5 = random.choice(range(0, 13))
                b0 = random.choice(range(0, 6))
                if b0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ1'], a0)
                if b0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ2'], a1)
                if b0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ3'], a2)
                if b0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ4'], a3)
                if b0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ5'], a4)
                if b0 == 5:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ6'], a5)
                self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                print('正码过关：  ' + str(i) + ' ' + str(s))
                self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                if b0 == 0:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ1'], a0)
                if b0 == 1:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ2'], a1)
                if b0 == 2:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ3'], a2)
                if b0 == 3:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ4'], a3)
                if b0 == 4:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ5'], a4)
                if b0 == 5:
                    self.base_driver.clicks(self.config_dict_marksix['ZMGGZ6'], a5)
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('正码过关下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 正码过关
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码过关')
                self.base_driver.forced_wait(1)
                break

    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------
    def zm1_6(self, row):
        # 正码-1-6
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码1-6')
        self.base_driver.forced_wait(1)
        try:
            for i in range(13):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                s6 = random.choice(range(0, 5))
                s7 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZM1_6ZM1'], s1[s2], i)
                print('正码特1-6正码一---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZM1_6ZM2'], s1[s3], i)
                print('正码特1-6正码二---号码：' + str(i + 13) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZM1_6ZM3'], s1[s4], i)
                print('正码特1-6正码三---号码：' + str(i + 26) + '下注金额是：' + str(s1[s4]))
                self.base_driver.types(self.config_dict_marksix['ZM1_6ZM4'], s1[s5], i)
                print('正码特1-6正码四---号码：' + str(i + 39) + '下注金额是：' + str(s1[s6]))
                self.base_driver.types(self.config_dict_marksix['ZM1_6ZM5'], s1[s6], i)
                print('正码特1-6正码五---号码：' + str(i + 52) + '下注金额是：' + str(s1[s6]))
                self.base_driver.types(self.config_dict_marksix['ZM1_6ZM6'], s1[s7], i)
                print('正码特1-6正码六---号码：' + str(i + 65) + '下注金额是：' + str(s1[s7]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码过关下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码过关
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码过关')
            self.base_driver.forced_wait(1)

    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------
    # ------------------------------------------------------------------------

    def zmt_1(self, row):
        # 正码特
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
        self.base_driver.forced_wait(1)
        # 正码特---正一特
        self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '0')
        self.base_driver.forced_wait(1)
        try:
            for i in range(13):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMTN01_13'], s1[s2], i)
                print('正码特正一特---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMTN14_26'], s1[s3], i)
                print('正码特正一特---号码：' + str(i + 14) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMTN27_39'], s1[s4], i)
                print('正码特正一特---号码：' + str(i + 27) + '下注金额是：' + str(s1[s4]))
                if i < 10:
                    self.base_driver.types(self.config_dict_marksix['ZMTN40_49'], s1[s5], i)
                    print('正码特正一特---号码：' + str(i + 40) + '下注金额是：' + str(s1[s5]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码特---正一特.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码特---正一特关下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码特
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
            self.base_driver.forced_wait(1)
            # 正码特---正一特
            self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '0')
            self.base_driver.forced_wait(1)
            
    def zmt_2(self, row):
        # 正码特
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
        self.base_driver.forced_wait(1)
        # 正二特
        self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '2')
        self.base_driver.forced_wait(1)
        try:
            for i in range(13):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMTN01_13'], s1[s2], i)
                print('正码特正二特---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMTN14_26'], s1[s3], i)
                print('正码特正二特---号码：' + str(i + 14) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMTN27_39'], s1[s4], i)
                print('正码特正二特---号码：' + str(i + 27) + '下注金额是：' + str(s1[s4]))
                if i < 10:
                    self.base_driver.types(self.config_dict_marksix['ZMTN40_49'], s1[s5], i)
                    print('正码特正二特---号码：' + str(i + 40) + '下注金额是：' + str(s1[s5]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关---正二特.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码特--正二特下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码特
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
            self.base_driver.forced_wait(1)
            # 正码特---正二特
            self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '2')
            self.base_driver.forced_wait(1)

    def zmt_3(self, row):
        # 正码特
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
        self.base_driver.forced_wait(1)
        # 正三特
        self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '2')
        self.base_driver.forced_wait(1)
        try:
            for i in range(13):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMTN01_13'], s1[s2], i)
                print('正码特正三特---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMTN14_26'], s1[s3], i)
                print('正码特正三特---号码：' + str(i + 14) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMTN27_39'], s1[s4], i)
                print('正码特正三特---号码：' + str(i + 27) + '下注金额是：' + str(s1[s4]))
                if i < 10:
                    self.base_driver.types(self.config_dict_marksix['ZMTN40_49'], s1[s5], i)
                    print('正码特正三特---号码：' + str(i + 40) + '下注金额是：' + str(s1[s5]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关---正三特.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码特--正三特下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码特
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
            self.base_driver.forced_wait(1)
            # 正码特---正三特
            self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '2')
            self.base_driver.forced_wait(1)

    def zmt_4(self, row):
        # 正码特
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
        self.base_driver.forced_wait(1)
        # 正四特
        self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '3')
        self.base_driver.forced_wait(1)
        try:
            for i in range(13):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMTN01_13'], s1[s2], i)
                print('正码特正四特---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMTN14_26'], s1[s3], i)
                print('正码特正四特---号码：' + str(i + 14) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMTN27_39'], s1[s4], i)
                print('正码特正四特---号码：' + str(i + 27) + '下注金额是：' + str(s1[s4]))
                if i < 10:
                    self.base_driver.types(self.config_dict_marksix['ZMTN40_49'], s1[s5], i)
                    print('正码特正四特---号码：' + str(i + 40) + '下注金额是：' + str(s1[s5]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关---正四特.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码特--正四特下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码特
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
            self.base_driver.forced_wait(1)
            # 正码特---正四特
            self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '3')
            self.base_driver.forced_wait(1)

    def zmt_5(self, row):
        # 正码特
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
        self.base_driver.forced_wait(1)
        # 正五特
        self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '4')
        self.base_driver.forced_wait(1)
        try:
            for i in range(13):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMTN01_13'], s1[s2], i)
                print('正码特正五特---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMTN14_26'], s1[s3], i)
                print('正码特正五特---号码：' + str(i + 14) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMTN27_39'], s1[s4], i)
                print('正码特正五特---号码：' + str(i + 27) + '下注金额是：' + str(s1[s4]))
                if i < 10:
                    self.base_driver.types(self.config_dict_marksix['ZMTN40_49'], s1[s5], i)
                    print('正码特正五特---号码：' + str(i + 40) + '下注金额是：' + str(s1[s5]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关---正五特.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码特--正五特下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码特
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
            self.base_driver.forced_wait(1)
            # 正码特---正五特
            self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '4')
            self.base_driver.forced_wait(1)

    def zmt_6(self, row):
        # 正码特
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
        self.base_driver.forced_wait(1)
        # 正六特
        self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '5')
        self.base_driver.forced_wait(1)
        try:
            for i in range(13):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMTN01_13'], s1[s2], i)
                print('正码特正六特---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMTN14_26'], s1[s3], i)
                print('正码特正六特---号码：' + str(i + 14) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMTN27_39'], s1[s4], i)
                print('正码特正六特---号码：' + str(i + 27) + '下注金额是：' + str(s1[s4]))
                if i < 10:
                    self.base_driver.types(self.config_dict_marksix['ZMTN40_49'], s1[s5], i)
                    print('正码特正六特---号码：' + str(i + 40) + '下注金额是：' + str(s1[s5]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关---正六特.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码特--正六特下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码特
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
            self.base_driver.forced_wait(1)
            # 正码特---正六特
            self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '5')
            self.base_driver.forced_wait(1)
    # ---------------------------------------------------------------------------------
    # ---------------------------------------------------------------------------------
    # ---------------------------------------------------------------------------------

    def zmzm(self, row):
        # 正码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码')
        self.base_driver.forced_wait(1)
        try:
            for i in range(10):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                s6 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMZMN01_10'], s1[s2], i)
                print('正码---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMZMN11_20'], s1[s3], i)
                print('正码---号码：' + str(i + 10) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMZMN21_30'], s1[s4], i)
                print('正码---号码：' + str(i + 20) + '下注金额是：' + str(s1[s4]))
                self.base_driver.types(self.config_dict_marksix['ZMZMN31_40'], s1[s5], i)
                print('正码---号码：' + str(i + 30) + '下注金额是：' + str(s1[s5]))
                if i < 9:
                    self.base_driver.types(self.config_dict_marksix['ZMZMN41_49'], s1[s6], i)
                    print('正码---号码：' + str(i + 40) + '下注金额是：' + str(s1[s6]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-正码过关---正六特.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('正码特--正六特下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 正码特
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '正码特')
            self.base_driver.forced_wait(1)
            # 正码特---正六特
            self.base_driver.clicks(self.config_dict_marksix['ZMTNT'], '5')
            self.base_driver.forced_wait(1)

    # ---------------------------------------------------------------------------------
    # ---------------------------------------------------------------------------------
    # ---------------------------------------------------------------------------------
    def tm(self, row):
        # 特码
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '特码')
        self.base_driver.forced_wait(1)
        try:
            for i in range(10):
                s0 = random.choice(range(1, 100))
                s1 = [1, 5, 10, 20, s0]
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                s5 = random.choice(range(0, 5))
                s6 = random.choice(range(0, 5))
                self.base_driver.types(self.config_dict_marksix['ZMZMN01_10'], s1[s2], i)
                print('特码---号码：' + str(i) + '下注金额是：' + str(s1[s2]))
                self.base_driver.types(self.config_dict_marksix['ZMZMN11_20'], s1[s3], i)
                print('特码---号码：' + str(i+10) + '下注金额是：' + str(s1[s3]))
                self.base_driver.types(self.config_dict_marksix['ZMZMN21_30'], s1[s4], i)
                print('特码---号码：' + str(i + 20) + '下注金额是：' + str(s1[s4]))
                self.base_driver.types(self.config_dict_marksix['ZMZMN31_40'], s1[s5], i)
                print('特码---号码：' + str(i + 30) + '下注金额是：' + str(s1[s5]))
                if i < 9:
                    self.base_driver.types(self.config_dict_marksix['ZMZMN41_49'], s1[s6], i)
                    print('特码---号码：' + str(i + 40) + '下注金额是：' + str(s1[s6]))
            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        except Exception as e:
            print(e)
            now_Time = time.strftime("%Y%m%d.%H.%M.%S")
            ss = '/fusion/pictures/marksix_minute/' + '%s-特码---特码.png' % now_Time
            self.base_driver.save_window_snapshot_by_io(ss)
            # self.logger.infos('特码--特码下注异常')
            self.base_driver.refresh()
            self.base_driver.forced_wait(4)
            # 特码
            self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '特码')
            self.base_driver.forced_wait(1)

    def choice_5(self, row):
        # 中一---五中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---五中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '0')
        self.base_driver.forced_wait(1)
        print('中一---五中一')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 6))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机五个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机五个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机五个：  ' + ' ' + str(i))
                # 随机六个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五中一随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五中一随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五中一随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('五中一随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 5:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('五中一随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---五中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---五中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---五中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---五中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '0')
                self.base_driver.forced_wait(1)
                break
                
    def choice_5_error(self, row):
        # 中一---五中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---五中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '0')
        self.base_driver.forced_wait(1)
        print('中一---五中一')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('五中一随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('五中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('五中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---五中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---五中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---五中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                # 中一---五中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '0')
                self.base_driver.forced_wait(1)
                break

    def choice_6(self, row):
        # 中一---六中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---六中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '1')
        self.base_driver.forced_wait(1)
        print('中一---六中一')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机六个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六中一随机六个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('随机六个：  ' + ' ' + str(i))
                # 随机七个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六中一随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六中一随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六中一随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('六中一随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六中一随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 4:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六中一随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('六中一随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---五中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---六中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---六中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---六中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '1')
                self.base_driver.forced_wait(1)
                break

    def choice_6_error(self, row):
        # 中一---六中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---六中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '1')
        self.base_driver.forced_wait(1)
        print('中一---六中一')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 5))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('六中一随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('六中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('六中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 or b0 == b2 \
                                or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('六中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('六中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---五中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---六中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---六中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---六中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '1')
                self.base_driver.forced_wait(1)
                break

    def choice_7(self, row):
        # 中一---七中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---七中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '2')
        self.base_driver.forced_wait(1)
        print('中一---七中一')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机七个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1 or a4 == a5:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('七中一随机七个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机七个：  ' + ' ' + str(i))
                # 随机八个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('七中一随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('七中一随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 3:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机十个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---七中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---七中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---七中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---七中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '2')
                self.base_driver.forced_wait(1)
                break

    def choice_7_error(self, row):
        # 中一---七中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        #  # 中一---七中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '2')
        self.base_driver.forced_wait(1)
        print('中一---七中一')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('七中一随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('七中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('七中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---七中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---七中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---七中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---七中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '2')
                self.base_driver.forced_wait(1)
                break

    def choice_8(self, row):
        # 中一---八中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---八中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '3')
        self.base_driver.forced_wait(1)
        print('中一---八中一')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机八个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == a1 or a2 == a3 or a5 == a6:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('八中一随机八个：  ' + ' ' + str(i))
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机八个：  ' + ' ' + str(i))
                # 随机九个
                if s0 == 1:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass
                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('八中一随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 2:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八中一随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('七中一随机十个：  ' + ' ' + str(i))
                # 随机十一个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a5 == a6 or a6 == a7 \
                            or a7 == a8 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八中一随机十一个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('八中一随机十一个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---八中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---八中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---八中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---八中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '3')
                self.base_driver.forced_wait(1)
                break

    def choice_8_error(self, row):
        # 中一---八中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---八中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '3')
        self.base_driver.forced_wait(1)
        print('中一---八中一')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 7))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('八中一随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('八中一随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('八中一随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---八中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---八中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---八中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---八中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '3')
                self.base_driver.forced_wait(1)
                break

    def choice_9(self, row):
        # 中一---九中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---九中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '4')
        self.base_driver.forced_wait(1)
        print('中一---九中一')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 3))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                # 随机九个
                if s0 == 0:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8:
                        pass

                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            print('九中一随机九个：  ' + ' ' + str(i))

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九中一随机九个：  ' + ' ' + str(i))
                # 随机十个
                if s0 == 1:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九中一随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九中一随机十个：  ' + ' ' + str(i))
                # 随机十一个
                if s0 == 2:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a5 == a6 or a6 == a7 \
                            or a7 == a8 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九中一随机十一个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('九中一随机十一个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---九中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---九中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---九中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---九中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '4')
                self.base_driver.forced_wait(1)
                break

    def choice_9_error(self, row):
        # 中一---九中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---九中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '4')
        self.base_driver.forced_wait(1)
        print('中一---九中一')
        for i in range(100):
            try:
                s0 = random.choice(range(0, 8))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('九中一随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九中一随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                # 随机八个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('九中一随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('九中一随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---九中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---九中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---九中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---九中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '4')
                self.base_driver.forced_wait(1)
                break

    def choice_10(self, row):
        # 中一---十中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---十中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '5')
        self.base_driver.forced_wait(1)
        print('中一---十中一')
        for i in range(20):
            try:
                s0 = random.choice(range(0, 4))
                s1 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                a9 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                # 随机十个
                if s0 == 0:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十个：  ' + ' ' + str(i))
                # 随机十一个
                if s0 == 1:
                    if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十一个： ' + ' ' + str(i))

                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十一个： ' + ' ' + str(i))
                # 随机十二个
                if s0 == 2:
                    if a0 == a1 or a0 == a8 or a1 == a8 or a2 == a3 or a4 == a5 or a6 == a7 or b0 == b1 or b0 == b2 \
                            or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十二个： ' + ' ' + str(i))

                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十二个： ' + ' ' + str(i))
                # 随机十三个
                if s0 == 3:
                    if a0 == a1 or a0 == a2 or a1 == a2 or a3 == a4 or a3 == a5 or a4 == a5 or a6 == a7 \
                            or a8 == a9 or b0 == b1 or b0 == b2 or b1 == b2:
                        if s1 == 0:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 1:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 2:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        if s1 == 3:
                            for j in range(10):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], j)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 4:
                            for j in range(9):
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], j)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十三个：  ' + ' ' + str(i))
                    else:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a9)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        print('十中一随机十二个：  ' + ' ' + str(i))
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---十中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---十中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---十中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---十中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '5')
                self.base_driver.forced_wait(1)
                break

    def choice_10_error(self, row):
        # 中一---十中一
        self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
        self.base_driver.forced_wait(1)
        # 中一---十中一
        self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '5')
        self.base_driver.forced_wait(1)
        print('中一---十中一')

        for i in range(100):
            try:
                s0 = random.choice(range(0, 9))
                s1 = random.choice(range(0, 5))
                s2 = random.choice(range(0, 5))
                s3 = random.choice(range(0, 5))
                s4 = random.choice(range(0, 5))
                a0 = random.choice(range(0, 10))
                a1 = random.choice(range(0, 10))
                a2 = random.choice(range(0, 10))
                a3 = random.choice(range(0, 10))
                a4 = random.choice(range(0, 10))
                a5 = random.choice(range(0, 10))
                a6 = random.choice(range(0, 10))
                a7 = random.choice(range(0, 10))
                a8 = random.choice(range(0, 10))
                b0 = random.choice(range(0, 9))
                b1 = random.choice(range(0, 9))
                b2 = random.choice(range(0, 9))
                b3 = random.choice(range(0, 9))
                b4 = random.choice(range(0, 9))
                b5 = random.choice(range(0, 9))
                b6 = random.choice(range(0, 9))
                b7 = random.choice(range(0, 9))
                b8 = random.choice(range(0, 9))
                # 随机一个
                if s0 == 0:
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    # self.base_driver.forced_wait(3)
                    self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                    s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                    print('十中一随机一个：  ' + ' ' + str(i) + ' ' + str(s))
                    self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                    if s1 == 0:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                    if s1 == 1:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                    if s1 == 2:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                    if s1 == 3:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                    if s1 == 4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机二个
                if s0 == 1:
                    if s1 == s2:
                        if a0 == a1 or b0 == b1:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                    else:
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机二个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机三个
                if s0 == 2:
                    if s1 == s2 or s1 == s3 or s2 == s3:
                        pass
                        if a0 == a1 or a0 == a2 or a1 == a2 or b0 == b1 or b0 == b2 or b1 == b2:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机三个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机四个
                if s0 == 3:
                    if s1 == s2 or s1 == s3 or s1 == s4 or s2 == s3 or s2 == s4 or s3 == s4:
                        if a0 == a1 or a0 == a2 or a0 == a3 or a1 == a2 or a1 == a3 or a2 == a3 or b0 == b1 \
                                or b0 == b2 or b0 == b3 or b1 == b2 or b1 == b3 or b2 == b3:
                            pass
                        else:
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            if s1 == 0:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            if s1 == 1:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            if s1 == 2:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            if s1 == 3:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            if s1 == 4:
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                                self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                    else:
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机四个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0 or s2 == 0 or s3 == 0 or s4 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        if s1 == 1 or s2 == 1 or s3 == 1 or s4 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        if s1 == 2 or s2 == 2 or s3 == 2 or s4 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        if s1 == 3 or s2 == 3 or s3 == 3 or s4 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        if s1 == 4 or s2 == 4 or s3 == 4 or s4 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                # 随机五个
                if s0 == 4:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a1 == a2 or a1 == a3 or a1 == a4 or a2 == a3 \
                            or a2 == a4 or a3 == a4 or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b2 == b3 or b2 == b4 or b3 == b4:
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                        self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机五个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                # 随机六个
                if s0 == 5:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == a1:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机六个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                # 随机七个
                if s0 == 6:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a1 == a2 or a1 == a3 \
                            or a1 == a4 or a1 == a5 or a1 == a6 or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 \
                            or a3 == a4 or a3 == a5 or a3 == a6 or a4 == a5 or a4 == a6 or a5 == a6 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b1 == b2 or b1 == b3 \
                            or b1 == b4 or b1 == b5 or b1 == b6 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b4 == b5 or b4 == b6 or b5 == b6:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十中一随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机七个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                # 随机八个
                if s0 == 7:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a1 == a2 \
                            or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a2 == a3 or a2 == a4 \
                            or a2 == a5 or a2 == a6 or a2 == a7 or a3 == a4 or a3 == a5 or a3 == a6 or a3 == a7 \
                            or a4 == a5 or a4 == a6 or a4 == a7 or a5 == a6 or a5 == a7 or a6 == a7 or b0 == b1 \
                            or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 or b1 == b2 \
                            or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 or b2 == b3 or b2 == b4 \
                            or b2 == b5 or b2 == b6 or b2 == b7 or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 \
                            or b4 == b5 or b4 == b6 or b4 == b7 or b5 == b6 or b5 == b7 or b6 == b7:
                        if a0 == b0 or a1 == b0 or a2 == b0 or a3 == b0 or a4 == b0 or a5 == b0 or a6 == b0:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            print('十中一随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机八个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                # 随机九个
                if s0 == 8:
                    if a0 == a1 or a0 == a2 or a0 == a3 or a0 == a4 or a0 == a5 or a0 == a6 or a0 == a7 or a0 == a8 \
                            or a1 == a2 or a1 == a3 or a1 == a4 or a1 == a5 or a1 == a6 or a1 == a7 or a1 == a8 \
                            or a2 == a3 or a2 == a4 or a2 == a5 or a2 == a6 or a2 == a7 or a2 == a8 or a3 == a4 \
                            or a3 == a5 or a3 == a6 or a3 == a7 or a3 == a8 or a4 == a5 or a4 == a6 or a4 == a7 \
                            or a4 == a8 or a5 == a6 or a5 == a7 or a5 == a8 or a6 == a7 or a6 == a8 or a7 == a8 \
                            or b0 == b1 or b0 == b2 or b0 == b3 or b0 == b4 or b0 == b5 or b0 == b6 or b0 == b7 \
                            or b0 == b8 or b1 == b2 or b1 == b3 or b1 == b4 or b1 == b5 or b1 == b6 or b1 == b7 \
                            or b1 == b8 or b2 == b3 or b2 == b4 or b2 == b5 or b2 == b6 or b2 == b7 or b2 == b8 \
                            or b3 == b4 or b3 == b5 or b3 == b6 or b3 == b7 or b3 == b8 or b4 == b5 or b4 == b6 \
                            or b4 == b7 or b4 == b8 or b5 == b6 or b5 == b7 or b5 == b8 or b6 == b7 or b6 == b8 \
                            or b7 == b8:
                        pass

                        if a0 == a1 or a2 == a3 or a4 == a5 or a6 == a7:
                            pass
                        else:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                            s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                            self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                            print('十中一随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)

                    else:
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b8)
                        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
                        s = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
                        print('十中一随机九个：  ' + ' ' + str(i) + ' ' + str(s))
                        self.base_driver.click(self.config_dict_marksix['TIPSBUTTON'])
                        if s1 == 0:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN01_10'], a8)
                        if s1 == 1:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN11_20'], a8)
                        if s1 == 2:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN21_30'], a8)
                        if s1 == 3:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN31_40'], a8)
                        if s1 == 4:
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b0)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b1)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b2)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b3)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b4)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b5)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b6)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b7)
                            self.base_driver.clicks(self.config_dict_marksix['NOCHOICEN41_49'], b8)
                else:
                    pass
            except Exception as e:
                print(e)
                now_Time = time.strftime("%Y%m%d.%H.%M.%S")
                ss = '/fusion/pictures/marksix_minute/' + '%s-中一---十中一.png' % now_Time
                self.base_driver.save_window_snapshot_by_io(ss)
                # self.logger.infos('中一---十中一下注异常')
                self.base_driver.refresh()
                self.base_driver.forced_wait(4)
                # 中一---十中一
                self.base_driver.clicks_by_text(self.config_dict_marksix['MENU'], '中一')
                self.base_driver.forced_wait(1)
                #  # 中一---十中一
                self.base_driver.clicks(self.config_dict_marksix['CHOICE1N'], '5')
                self.base_driver.forced_wait(1)
                break

    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------

    def addnote_button(self):
        # 点击添加注单按钮
        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        print('点击添加注单按钮')
        self.base_driver.forced_wait(3)

    def radoms(self, row):

        # 随机5注
        self.base_driver.click(self.config_dict_marksix['RANDOM5'])
        self.base_driver.forced_wait(3)
        # 随机1注2元
        self.base_driver.click(self.config_dict_marksix['RANDOM1'])
        # 随机一注2角
        self.base_driver.click(self.config_dict_marksix['JIAO'])
        self.base_driver.click(self.config_dict_marksix['RANDOM1'])
        # 随机一注2分
        self.base_driver.click(self.config_dict_marksix['FEN'])
        self.base_driver.click(self.config_dict_marksix['RANDOM1'])
        # 随机20
        # self.base_driver.clear(self.config_dict_marksix['XIUGAI'])
        #
        s = random.choice(range(0, 1000))
        self.base_driver.type(self.config_dict_marksix['XIUGAI'], "\b" + str(s))
        self.base_driver.click(self.config_dict_marksix['RANDOM1'])
        # self.base_driver.refresh()
        self.base_driver.forced_wait(3)

        # 全部删除':
        # self.base_driver.click(self.config_dict_marksix['ALLDELETE'])
        #self.base_driver.forced_wait(1)
        print('随机5注')

        self.base_driver.click(self.config_dict_marksix['SUREBET'])
        self.base_driver.forced_wait(5)
        self.base_driver.refresh()
        self.base_driver.forced_wait(3)

    def surebet(self):
        # 确认投注按钮
        surebet = self.base_driver.click(self.config_dict_marksix['SUREBET'])
        print('点击确认投注')
        self.base_driver.forced_wait(5)
        self.base_driver.refresh()
        self.base_driver.forced_wait(3)
        return surebet

    def get_tips(self):
        tips = self.base_driver.get_text(self.config_dict_marksix['TIPS'])
        print('捕捉到的信息是：' + tips)
        return tips

    def get_tips01(self):
        # 提示请先添加投注内容
        tips = self.base_driver.get_text(self.config_dict_marksix['TIPS01'])
        print('捕捉到的信息是：' + tips)
        return tips

    def get_tips02(self):
        # 提示下注成功
        tips = self.base_driver.get_text(self.config_dict_marksix['TIPS02'])
        print('捕捉到的信息是：' + tips)
        return tips

    def get_tips0000(self):

        # 合肖---鼠牛虎兔龙蛇马羊猴鸡11
        self.base_driver.click(self.config_dict_marksix['SHU'])
        self.base_driver.click(self.config_dict_marksix['NIU'])
        self.base_driver.click(self.config_dict_marksix['HU'])
        self.base_driver.click(self.config_dict_marksix['TUZI'])
        self.base_driver.click(self.config_dict_marksix['LONG'])
        self.base_driver.click(self.config_dict_marksix['SHE'])
        self.base_driver.click(self.config_dict_marksix['MA'])
        self.base_driver.click(self.config_dict_marksix['YANG'])
        self.base_driver.click(self.config_dict_marksix['HOU'])
        self.base_driver.click(self.config_dict_marksix['JI'])
        self.base_driver.click(self.config_dict_marksix['GOU'])
        self.base_driver.click(self.config_dict_marksix['ADDNOTE'])
        self.base_driver.forced_wait(0.5)
